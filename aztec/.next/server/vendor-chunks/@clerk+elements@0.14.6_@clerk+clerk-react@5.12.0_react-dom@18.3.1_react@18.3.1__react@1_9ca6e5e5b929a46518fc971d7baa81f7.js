"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7";
exports.ids = ["vendor-chunks/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-7WFXAEQQ.mjs":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-7WFXAEQQ.mjs ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Router: () => (/* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_3__.Router),\n/* harmony export */   useClerkRouter: () => (/* reexport safe */ _clerk_shared_router__WEBPACK_IMPORTED_MODULE_3__.useClerkRouter),\n/* harmony export */   useNextRouter: () => (/* binding */ useNextRouter),\n/* harmony export */   usePathnameWithoutCatchAll: () => (/* binding */ usePathnameWithoutCatchAll),\n/* harmony export */   useVirtualRouter: () => (/* binding */ useVirtualRouter)\n/* harmony export */ });\n/* harmony import */ var _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-BXZUXUGF.mjs */ \"(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-BXZUXUGF.mjs\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _clerk_shared_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/router */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/router.mjs\");\n/* harmony import */ var next_compat_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/compat/router */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/compat/router.js\");\n\n\n// src/react/router/next.ts\n\nvar useNextRouter = () => {\n  const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n  const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname)();\n  const searchParams = typeof window === \"undefined\" ? new URLSearchParams() : (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.useSearchParams)();\n  const canUseWindowHistoryAPIs = typeof window !== \"undefined\" && window.next && window.next.version >= _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n  return {\n    mode: \"path\",\n    name: \"NextRouter\",\n    push: (path) => router.push(path),\n    replace: (path) => canUseWindowHistoryAPIs ? window.history.replaceState(null, \"\", path) : router.replace(path),\n    shallowPush(path) {\n      canUseWindowHistoryAPIs ? window.history.pushState(null, \"\", path) : router.push(path, {});\n    },\n    pathname: () => pathname,\n    searchParams: () => searchParams\n  };\n};\n\n// src/react/router/virtual.ts\n\nvar DUMMY_ORIGIN = \"https://clerk.dummy\";\nvar _url, _listeners;\nvar VirtualRouter = class {\n  constructor(path) {\n    this.name = \"VirtualRouter\";\n    this.mode = \"virtual\";\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _url);\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateAdd)(this, _listeners, /* @__PURE__ */ new Set());\n    const origin = typeof window === \"undefined\" ? DUMMY_ORIGIN : window.location.origin;\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, new URL(path != null ? path : \"/\", origin));\n  }\n  push(path) {\n    const newUrl = new URL((0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).toString());\n    newUrl.pathname = path;\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateSet)(this, _url, newUrl);\n    this.emit();\n  }\n  replace(path) {\n    this.push(path);\n  }\n  shallowPush(path) {\n    this.push(path);\n  }\n  pathname() {\n    return (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).pathname;\n  }\n  searchParams() {\n    return (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url).searchParams;\n  }\n  subscribe(listener) {\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).add(listener);\n    return () => (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).delete(listener);\n  }\n  emit() {\n    (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _listeners).forEach((listener) => listener((0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url)));\n  }\n  getSnapshot() {\n    return (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_1__.__privateGet)(this, _url);\n  }\n};\n_url = new WeakMap();\n_listeners = new WeakMap();\nvar virtualRouter = new VirtualRouter(\"/\");\nvar useVirtualRouter = () => {\n  const url = (0,react__WEBPACK_IMPORTED_MODULE_2__.useSyncExternalStore)(\n    virtualRouter.subscribe.bind(virtualRouter),\n    virtualRouter.getSnapshot.bind(virtualRouter)\n  );\n  return {\n    mode: virtualRouter.mode,\n    name: virtualRouter.name,\n    pathname: () => url.pathname,\n    push: virtualRouter.push.bind(virtualRouter),\n    replace: virtualRouter.replace.bind(virtualRouter),\n    searchParams: () => url.searchParams,\n    shallowPush: virtualRouter.shallowPush.bind(virtualRouter)\n  };\n};\n\n// src/react/router/index.ts\n\n\n// src/react/utils/path-inference/next.tsx\n\n\n\n\n// src/react/utils/path-inference/utils.ts\nfunction removeOptionalCatchAllSegment(pathname) {\n  return pathname.replace(/\\/\\[\\[\\.\\.\\..*/, \"\");\n}\n\n// src/react/utils/path-inference/next.tsx\nvar usePathnameWithoutCatchAll = () => {\n  const pathRef = react__WEBPACK_IMPORTED_MODULE_2__.useRef();\n  const pagesRouter = (0,next_compat_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n  if (pagesRouter) {\n    if (pathRef.current) {\n      return pathRef.current;\n    } else {\n      pathRef.current = removeOptionalCatchAllSegment(pagesRouter.pathname);\n      return pathRef.current;\n    }\n  }\n  const pathname = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.usePathname)() || \"\";\n  const pathParts = pathname.split(\"/\").filter(Boolean);\n  const catchAllParams = Object.values((0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.useParams)() || {}).filter((v) => Array.isArray(v)).flat(Infinity);\n  if (pathRef.current) {\n    return pathRef.current;\n  } else {\n    pathRef.current = `/${pathParts.slice(0, pathParts.length - catchAllParams.length).join(\"/\")}`;\n    return pathRef.current;\n  }\n};\n\n\n//# sourceMappingURL=chunk-7WFXAEQQ.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNsZXJrK2VsZW1lbnRzQDAuMTQuNl9AY2xlcmsrY2xlcmstcmVhY3RANS4xMi4wX3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX19yZWFjdEAxXzljYTZlNWU1YjkyOWE0NjUxOGZjOTcxZDdiYWE4MWY3L25vZGVfbW9kdWxlcy9AY2xlcmsvZWxlbWVudHMvZGlzdC9jaHVuay03V0ZYQUVRUS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUs4Qjs7QUFFOUI7QUFDMEU7QUFDMUU7QUFDQSxpQkFBaUIsMERBQVM7QUFDMUIsbUJBQW1CLDREQUFXO0FBQzlCLCtFQUErRSxnRUFBZTtBQUM5Rix5R0FBeUcsb0ZBQW1DO0FBQzVJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtGQUErRjtBQUMvRixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQixJQUFJLGlFQUFZO0FBQ2hCO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQjtBQUNBO0FBQ0EsMkJBQTJCLGlFQUFZO0FBQ3ZDO0FBQ0EsSUFBSSxpRUFBWTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlFQUFZO0FBQ3ZCO0FBQ0E7QUFDQSxXQUFXLGlFQUFZO0FBQ3ZCO0FBQ0E7QUFDQSxJQUFJLGlFQUFZO0FBQ2hCLGlCQUFpQixpRUFBWTtBQUM3QjtBQUNBO0FBQ0EsSUFBSSxpRUFBWSxrREFBa0QsaUVBQVk7QUFDOUU7QUFDQTtBQUNBLFdBQVcsaUVBQVk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBb0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDcUU7O0FBRXJFO0FBQzZEO0FBQ1k7QUFDL0M7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQVk7QUFDOUIsc0JBQXNCLDZEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw0REFBWTtBQUMvQjtBQUNBLHVDQUF1QywwREFBUyxRQUFRO0FBQ3hEO0FBQ0E7QUFDQSxJQUFJO0FBQ0osMEJBQTBCLHVFQUF1RTtBQUNqRztBQUNBO0FBQ0E7O0FBUUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2F1dG9saW5rcHJvLWF6dGVjLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BjbGVyaytlbGVtZW50c0AwLjE0LjZfQGNsZXJrK2NsZXJrLXJlYWN0QDUuMTIuMF9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV9fcmVhY3RAMV85Y2E2ZTVlNWI5MjlhNDY1MThmYzk3MWQ3YmFhODFmNy9ub2RlX21vZHVsZXMvQGNsZXJrL2VsZW1lbnRzL2Rpc3QvY2h1bmstN1dGWEFFUVEubWpzPzkzZmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgTkVYVF9XSU5ET1dfSElTVE9SWV9TVVBQT1JUX1ZFUlNJT04sXG4gIF9fcHJpdmF0ZUFkZCxcbiAgX19wcml2YXRlR2V0LFxuICBfX3ByaXZhdGVTZXRcbn0gZnJvbSBcIi4vY2h1bmstQlhaVVhVR0YubWpzXCI7XG5cbi8vIHNyYy9yZWFjdC9yb3V0ZXIvbmV4dC50c1xuaW1wb3J0IHsgdXNlUGF0aG5hbWUsIHVzZVJvdXRlciwgdXNlU2VhcmNoUGFyYW1zIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xudmFyIHVzZU5leHRSb3V0ZXIgPSAoKSA9PiB7XG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICBjb25zdCBwYXRobmFtZSA9IHVzZVBhdGhuYW1lKCk7XG4gIGNvbnN0IHNlYXJjaFBhcmFtcyA9IHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIgPyBuZXcgVVJMU2VhcmNoUGFyYW1zKCkgOiB1c2VTZWFyY2hQYXJhbXMoKTtcbiAgY29uc3QgY2FuVXNlV2luZG93SGlzdG9yeUFQSXMgPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5uZXh0ICYmIHdpbmRvdy5uZXh0LnZlcnNpb24gPj0gTkVYVF9XSU5ET1dfSElTVE9SWV9TVVBQT1JUX1ZFUlNJT047XG4gIHJldHVybiB7XG4gICAgbW9kZTogXCJwYXRoXCIsXG4gICAgbmFtZTogXCJOZXh0Um91dGVyXCIsXG4gICAgcHVzaDogKHBhdGgpID0+IHJvdXRlci5wdXNoKHBhdGgpLFxuICAgIHJlcGxhY2U6IChwYXRoKSA9PiBjYW5Vc2VXaW5kb3dIaXN0b3J5QVBJcyA/IHdpbmRvdy5oaXN0b3J5LnJlcGxhY2VTdGF0ZShudWxsLCBcIlwiLCBwYXRoKSA6IHJvdXRlci5yZXBsYWNlKHBhdGgpLFxuICAgIHNoYWxsb3dQdXNoKHBhdGgpIHtcbiAgICAgIGNhblVzZVdpbmRvd0hpc3RvcnlBUElzID8gd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKG51bGwsIFwiXCIsIHBhdGgpIDogcm91dGVyLnB1c2gocGF0aCwge30pO1xuICAgIH0sXG4gICAgcGF0aG5hbWU6ICgpID0+IHBhdGhuYW1lLFxuICAgIHNlYXJjaFBhcmFtczogKCkgPT4gc2VhcmNoUGFyYW1zXG4gIH07XG59O1xuXG4vLyBzcmMvcmVhY3Qvcm91dGVyL3ZpcnR1YWwudHNcbmltcG9ydCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlIH0gZnJvbSBcInJlYWN0XCI7XG52YXIgRFVNTVlfT1JJR0lOID0gXCJodHRwczovL2NsZXJrLmR1bW15XCI7XG52YXIgX3VybCwgX2xpc3RlbmVycztcbnZhciBWaXJ0dWFsUm91dGVyID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihwYXRoKSB7XG4gICAgdGhpcy5uYW1lID0gXCJWaXJ0dWFsUm91dGVyXCI7XG4gICAgdGhpcy5tb2RlID0gXCJ2aXJ0dWFsXCI7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF91cmwpO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfbGlzdGVuZXJzLCAvKiBAX19QVVJFX18gKi8gbmV3IFNldCgpKTtcbiAgICBjb25zdCBvcmlnaW4gPSB0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiID8gRFVNTVlfT1JJR0lOIDogd2luZG93LmxvY2F0aW9uLm9yaWdpbjtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX3VybCwgbmV3IFVSTChwYXRoICE9IG51bGwgPyBwYXRoIDogXCIvXCIsIG9yaWdpbikpO1xuICB9XG4gIHB1c2gocGF0aCkge1xuICAgIGNvbnN0IG5ld1VybCA9IG5ldyBVUkwoX19wcml2YXRlR2V0KHRoaXMsIF91cmwpLnRvU3RyaW5nKCkpO1xuICAgIG5ld1VybC5wYXRobmFtZSA9IHBhdGg7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF91cmwsIG5ld1VybCk7XG4gICAgdGhpcy5lbWl0KCk7XG4gIH1cbiAgcmVwbGFjZShwYXRoKSB7XG4gICAgdGhpcy5wdXNoKHBhdGgpO1xuICB9XG4gIHNoYWxsb3dQdXNoKHBhdGgpIHtcbiAgICB0aGlzLnB1c2gocGF0aCk7XG4gIH1cbiAgcGF0aG5hbWUoKSB7XG4gICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKS5wYXRobmFtZTtcbiAgfVxuICBzZWFyY2hQYXJhbXMoKSB7XG4gICAgcmV0dXJuIF9fcHJpdmF0ZUdldCh0aGlzLCBfdXJsKS5zZWFyY2hQYXJhbXM7XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgX19wcml2YXRlR2V0KHRoaXMsIF9saXN0ZW5lcnMpLmFkZChsaXN0ZW5lcik7XG4gICAgcmV0dXJuICgpID0+IF9fcHJpdmF0ZUdldCh0aGlzLCBfbGlzdGVuZXJzKS5kZWxldGUobGlzdGVuZXIpO1xuICB9XG4gIGVtaXQoKSB7XG4gICAgX19wcml2YXRlR2V0KHRoaXMsIF9saXN0ZW5lcnMpLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihfX3ByaXZhdGVHZXQodGhpcywgX3VybCkpKTtcbiAgfVxuICBnZXRTbmFwc2hvdCgpIHtcbiAgICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF91cmwpO1xuICB9XG59O1xuX3VybCA9IG5ldyBXZWFrTWFwKCk7XG5fbGlzdGVuZXJzID0gbmV3IFdlYWtNYXAoKTtcbnZhciB2aXJ0dWFsUm91dGVyID0gbmV3IFZpcnR1YWxSb3V0ZXIoXCIvXCIpO1xudmFyIHVzZVZpcnR1YWxSb3V0ZXIgPSAoKSA9PiB7XG4gIGNvbnN0IHVybCA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKFxuICAgIHZpcnR1YWxSb3V0ZXIuc3Vic2NyaWJlLmJpbmQodmlydHVhbFJvdXRlciksXG4gICAgdmlydHVhbFJvdXRlci5nZXRTbmFwc2hvdC5iaW5kKHZpcnR1YWxSb3V0ZXIpXG4gICk7XG4gIHJldHVybiB7XG4gICAgbW9kZTogdmlydHVhbFJvdXRlci5tb2RlLFxuICAgIG5hbWU6IHZpcnR1YWxSb3V0ZXIubmFtZSxcbiAgICBwYXRobmFtZTogKCkgPT4gdXJsLnBhdGhuYW1lLFxuICAgIHB1c2g6IHZpcnR1YWxSb3V0ZXIucHVzaC5iaW5kKHZpcnR1YWxSb3V0ZXIpLFxuICAgIHJlcGxhY2U6IHZpcnR1YWxSb3V0ZXIucmVwbGFjZS5iaW5kKHZpcnR1YWxSb3V0ZXIpLFxuICAgIHNlYXJjaFBhcmFtczogKCkgPT4gdXJsLnNlYXJjaFBhcmFtcyxcbiAgICBzaGFsbG93UHVzaDogdmlydHVhbFJvdXRlci5zaGFsbG93UHVzaC5iaW5kKHZpcnR1YWxSb3V0ZXIpXG4gIH07XG59O1xuXG4vLyBzcmMvcmVhY3Qvcm91dGVyL2luZGV4LnRzXG5pbXBvcnQgeyBSb3V0ZSwgUm91dGVyLCB1c2VDbGVya1JvdXRlciB9IGZyb20gXCJAY2xlcmsvc2hhcmVkL3JvdXRlclwiO1xuXG4vLyBzcmMvcmVhY3QvdXRpbHMvcGF0aC1pbmZlcmVuY2UvbmV4dC50c3hcbmltcG9ydCB7IHVzZVJvdXRlciBhcyB1c2VSb3V0ZXIyIH0gZnJvbSBcIm5leHQvY29tcGF0L3JvdXRlclwiO1xuaW1wb3J0IHsgdXNlUGFyYW1zLCB1c2VQYXRobmFtZSBhcyB1c2VQYXRobmFtZTIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbi8vIHNyYy9yZWFjdC91dGlscy9wYXRoLWluZmVyZW5jZS91dGlscy50c1xuZnVuY3Rpb24gcmVtb3ZlT3B0aW9uYWxDYXRjaEFsbFNlZ21lbnQocGF0aG5hbWUpIHtcbiAgcmV0dXJuIHBhdGhuYW1lLnJlcGxhY2UoL1xcL1xcW1xcW1xcLlxcLlxcLi4qLywgXCJcIik7XG59XG5cbi8vIHNyYy9yZWFjdC91dGlscy9wYXRoLWluZmVyZW5jZS9uZXh0LnRzeFxudmFyIHVzZVBhdGhuYW1lV2l0aG91dENhdGNoQWxsID0gKCkgPT4ge1xuICBjb25zdCBwYXRoUmVmID0gUmVhY3QudXNlUmVmKCk7XG4gIGNvbnN0IHBhZ2VzUm91dGVyID0gdXNlUm91dGVyMigpO1xuICBpZiAocGFnZXNSb3V0ZXIpIHtcbiAgICBpZiAocGF0aFJlZi5jdXJyZW50KSB7XG4gICAgICByZXR1cm4gcGF0aFJlZi5jdXJyZW50O1xuICAgIH0gZWxzZSB7XG4gICAgICBwYXRoUmVmLmN1cnJlbnQgPSByZW1vdmVPcHRpb25hbENhdGNoQWxsU2VnbWVudChwYWdlc1JvdXRlci5wYXRobmFtZSk7XG4gICAgICByZXR1cm4gcGF0aFJlZi5jdXJyZW50O1xuICAgIH1cbiAgfVxuICBjb25zdCBwYXRobmFtZSA9IHVzZVBhdGhuYW1lMigpIHx8IFwiXCI7XG4gIGNvbnN0IHBhdGhQYXJ0cyA9IHBhdGhuYW1lLnNwbGl0KFwiL1wiKS5maWx0ZXIoQm9vbGVhbik7XG4gIGNvbnN0IGNhdGNoQWxsUGFyYW1zID0gT2JqZWN0LnZhbHVlcyh1c2VQYXJhbXMoKSB8fCB7fSkuZmlsdGVyKCh2KSA9PiBBcnJheS5pc0FycmF5KHYpKS5mbGF0KEluZmluaXR5KTtcbiAgaWYgKHBhdGhSZWYuY3VycmVudCkge1xuICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gIH0gZWxzZSB7XG4gICAgcGF0aFJlZi5jdXJyZW50ID0gYC8ke3BhdGhQYXJ0cy5zbGljZSgwLCBwYXRoUGFydHMubGVuZ3RoIC0gY2F0Y2hBbGxQYXJhbXMubGVuZ3RoKS5qb2luKFwiL1wiKX1gO1xuICAgIHJldHVybiBwYXRoUmVmLmN1cnJlbnQ7XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIHVzZU5leHRSb3V0ZXIsXG4gIHVzZVZpcnR1YWxSb3V0ZXIsXG4gIFJvdXRlcixcbiAgdXNlQ2xlcmtSb3V0ZXIsXG4gIHVzZVBhdGhuYW1lV2l0aG91dENhdGNoQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmstN1dGWEFFUVEubWpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-7WFXAEQQ.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-BXZUXUGF.mjs":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-BXZUXUGF.mjs ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CAPTCHA_ELEMENT_ID: () => (/* binding */ CAPTCHA_ELEMENT_ID),\n/* harmony export */   ClerkElementsError: () => (/* binding */ ClerkElementsError),\n/* harmony export */   ClerkElementsRuntimeError: () => (/* binding */ ClerkElementsRuntimeError),\n/* harmony export */   Connection: () => (/* binding */ Connection),\n/* harmony export */   ERROR_CODES: () => (/* binding */ ERROR_CODES),\n/* harmony export */   Field: () => (/* binding */ Field),\n/* harmony export */   FieldError: () => (/* binding */ FieldError),\n/* harmony export */   FieldState: () => (/* binding */ FieldState),\n/* harmony export */   Form: () => (/* binding */ Form),\n/* harmony export */   FormStoreProvider: () => (/* binding */ FormStoreProvider),\n/* harmony export */   GlobalError: () => (/* binding */ GlobalError),\n/* harmony export */   Icon: () => (/* binding */ Icon),\n/* harmony export */   Input: () => (/* binding */ Input),\n/* harmony export */   Label: () => (/* binding */ Label),\n/* harmony export */   Loading: () => (/* binding */ Loading),\n/* harmony export */   MAGIC_LINK_VERIFY_PATH_ROUTE: () => (/* binding */ MAGIC_LINK_VERIFY_PATH_ROUTE),\n/* harmony export */   NEXT_WINDOW_HISTORY_SUPPORT_VERSION: () => (/* binding */ NEXT_WINDOW_HISTORY_SUPPORT_VERSION),\n/* harmony export */   RESENDABLE_COUNTDOWN_DEFAULT: () => (/* binding */ RESENDABLE_COUNTDOWN_DEFAULT),\n/* harmony export */   ROUTING: () => (/* binding */ ROUTING),\n/* harmony export */   SEARCH_PARAMS: () => (/* binding */ SEARCH_PARAMS),\n/* harmony export */   SIGN_IN_DEFAULT_BASE_PATH: () => (/* binding */ SIGN_IN_DEFAULT_BASE_PATH),\n/* harmony export */   SIGN_UP_DEFAULT_BASE_PATH: () => (/* binding */ SIGN_UP_DEFAULT_BASE_PATH),\n/* harmony export */   SSO_CALLBACK_PATH_ROUTE: () => (/* binding */ SSO_CALLBACK_PATH_ROUTE),\n/* harmony export */   SignInFirstFactor: () => (/* binding */ SignInFirstFactor),\n/* harmony export */   SignInFirstFactorCtx: () => (/* binding */ SignInFirstFactorCtx),\n/* harmony export */   SignInRouterCtx: () => (/* binding */ SignInRouterCtx),\n/* harmony export */   SignInRouterMachine: () => (/* binding */ SignInRouterMachine),\n/* harmony export */   SignInSafeIdentifierSelectorForStrategy: () => (/* binding */ SignInSafeIdentifierSelectorForStrategy),\n/* harmony export */   SignInSalutationSelector: () => (/* binding */ SignInSalutationSelector),\n/* harmony export */   SignInSecondFactor: () => (/* binding */ SignInSecondFactor),\n/* harmony export */   SignInSecondFactorCtx: () => (/* binding */ SignInSecondFactorCtx),\n/* harmony export */   SignInSessionList: () => (/* binding */ SignInSessionList),\n/* harmony export */   SignInSessionListItem: () => (/* binding */ SignInSessionListItem),\n/* harmony export */   SignInStep: () => (/* binding */ SignInStep),\n/* harmony export */   SignInStrategy: () => (/* binding */ SignInStrategy),\n/* harmony export */   SignInSupportedStrategy: () => (/* binding */ SignInSupportedStrategy),\n/* harmony export */   SignUpRouterCtx: () => (/* binding */ SignUpRouterCtx),\n/* harmony export */   SignUpStartCtx: () => (/* binding */ SignUpStartCtx),\n/* harmony export */   SignUpStep: () => (/* binding */ SignUpStep),\n/* harmony export */   SignUpStrategy: () => (/* binding */ SignUpStrategy),\n/* harmony export */   SignUpVerificationCtx: () => (/* binding */ SignUpVerificationCtx),\n/* harmony export */   Submit: () => (/* binding */ Submit),\n/* harmony export */   ThirdPartyMachine: () => (/* binding */ ThirdPartyMachine),\n/* harmony export */   ThirdPartyMachineId: () => (/* binding */ ThirdPartyMachineId),\n/* harmony export */   __privateAdd: () => (/* binding */ __privateAdd),\n/* harmony export */   __privateGet: () => (/* binding */ __privateGet),\n/* harmony export */   __privateSet: () => (/* binding */ __privateSet),\n/* harmony export */   assertActorEventError: () => (/* binding */ assertActorEventError),\n/* harmony export */   inspect: () => (/* binding */ inspect),\n/* harmony export */   sendToLoading: () => (/* binding */ sendToLoading),\n/* harmony export */   shouldUseVirtualRouting: () => (/* binding */ shouldUseVirtualRouting),\n/* harmony export */   useFormStore: () => (/* binding */ useFormStore),\n/* harmony export */   useSignInActiveSessionContext: () => (/* binding */ useSignInActiveSessionContext),\n/* harmony export */   useSignInStrategy: () => (/* binding */ useSignInStrategy)\n/* harmony export */ });\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-form */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-form@0.1.2_@types+react-dom@18.3.5_@types+react@18.3.18__@types+react@1_9bb67f453e26f5661818d7508b67dcb9/node_modules/@radix-ui/react-form/dist/index.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @xstate/react */ \"(ssr)/./node_modules/.pnpm/@xstate+react@4.1.3_@types+react@18.3.18_react@18.3.1_xstate@5.19.2/node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var _clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/error */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/error.mjs\");\n/* harmony import */ var _clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @clerk/shared/underscore */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/underscore.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@5.19.2/node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@5.19.2/node_modules/xstate/dist/log-0acd9069.development.esm.js\");\n/* harmony import */ var _clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @clerk/clerk-react */ \"(ssr)/./node_modules/.pnpm/@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var _clerk_shared__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @clerk/shared */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/index.mjs\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-slot@1.1.2_@types+react@18.3.18_react@18.3.1/node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @clerk/shared/logger */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/logger.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _clerk_types__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @clerk/types */ \"(ssr)/./node_modules/.pnpm/@clerk+types@4.46.1/node_modules/@clerk/types/dist/esm/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@5.19.2/node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @clerk/shared/webauthn */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/webauthn.mjs\");\n/* harmony import */ var _clerk_shared_url__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @clerk/shared/url */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/url.mjs\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@5.19.2/node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\n\n// src/react/common/index.ts\n\n\n// src/react/common/form/field.tsx\n\n\n\n// src/internals/machines/form/form.context.ts\n\n\n// src/internals/machines/form/form.machine.ts\n\n\n\n\n// src/internals/errors/index.ts\nvar ClerkElementsErrorBase = class extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n    this.clerkError = true;\n    this.clerkElementsError = true;\n    this.name = \"ClerkElementsError\";\n    this.rawMessage = message;\n  }\n  toString() {\n    return `[${this.name}]\nCode: ${this.code}\nMessage: ${this.message}`;\n  }\n};\nvar ClerkElementsError = class _ClerkElementsError extends ClerkElementsErrorBase {\n  static fromAPIError(error) {\n    return new _ClerkElementsError(error.code, error.longMessage || error.message);\n  }\n  constructor(code, message) {\n    super(code, message);\n    this.name = \"ClerkElementsError\";\n  }\n};\nvar ClerkElementsRuntimeError = class extends ClerkElementsErrorBase {\n  constructor(message) {\n    super(\"elements_runtime_error\", message);\n    this.name = \"ClerkElementsRuntimeError\";\n  }\n};\nvar ClerkElementsFieldError = class _ClerkElementsFieldError extends ClerkElementsErrorBase {\n  constructor(code, message) {\n    super(code, message);\n    this.matchFn = () => true;\n    this.name = \"ClerkElementsFieldError\";\n  }\n  static fromAPIError(error) {\n    return new _ClerkElementsFieldError(error.code, error.longMessage || error.message);\n  }\n  get validityState() {\n    return this.code;\n  }\n  get forceMatch() {\n    return true;\n  }\n};\n\n// src/internals/machines/form/form.machine.ts\nvar FormMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actions: {\n    setGlobalErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      errors: (_, params) => [...params.errors]\n    }),\n    setFieldFeedback: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fields: ({ context }, params) => {\n        if (!params.name) {\n          throw new Error(\"Field name is required\");\n        }\n        if (context.fields.has(params.name)) {\n          context.fields.get(params.name).feedback = params.feedback;\n        }\n        return context.fields;\n      }\n    })\n  },\n  types: {}\n}).createMachine({\n  id: \"Form\",\n  context: () => ({\n    defaultValues: /* @__PURE__ */ new Map(),\n    errors: [],\n    fields: /* @__PURE__ */ new Map(),\n    progressive: false\n  }),\n  on: {\n    \"ERRORS.SET\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        var _a3, _b3;\n        if ((0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isKnownError)(event.error)) {\n          const fields = {};\n          const globalErrors = [];\n          for (const error of event.error.errors || [event.error]) {\n            const name = (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.snakeToCamel)((_a3 = error.meta) == null ? void 0 : _a3.paramName);\n            if (!name) {\n              globalErrors.push(ClerkElementsError.fromAPIError(error));\n              continue;\n            } else if (!fields[name]) {\n              fields[name] = [];\n            }\n            (_b3 = fields[name]) == null ? void 0 : _b3.push(ClerkElementsFieldError.fromAPIError(error));\n          }\n          enqueue({\n            type: \"setGlobalErrors\",\n            params: {\n              errors: globalErrors\n            }\n          });\n          for (const field in fields) {\n            enqueue({\n              type: \"setFieldFeedback\",\n              params: {\n                name: field,\n                feedback: {\n                  type: \"error\",\n                  message: fields[field][0]\n                }\n              }\n            });\n          }\n        }\n      })\n    },\n    \"ERRORS.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        errors: () => []\n      })\n    },\n    \"FIELD.ADD\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          event.field.value = event.field.value || context.defaultValues.get(event.field.name) || void 0;\n          context.fields.set(event.field.name, event.field);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.UPDATE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.checked = event.field.checked;\n            field.disabled = event.field.disabled || false;\n            field.value = event.field.value;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.DISABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = true;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.ENABLE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          const field = context.fields.get(event.field.name);\n          if (field) {\n            field.disabled = false;\n            context.fields.set(event.field.name, field);\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.REMOVE\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          context.fields.delete(event.field.name);\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.SET\": {\n      actions: [\n        {\n          type: \"setFieldFeedback\",\n          params: ({ event }) => event.field\n        }\n      ]\n    },\n    \"FIELD.FEEDBACK.CLEAR\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context, event }) => {\n          if (!event.field.name) {\n            throw new Error(\"Field name is required\");\n          }\n          if (context.fields.has(event.field.name)) {\n            context.fields.get(event.field.name).feedback = void 0;\n          }\n          return context.fields;\n        }\n      })\n    },\n    \"FIELD.FEEDBACK.CLEAR.ALL\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        fields: ({ context }) => {\n          context.fields.forEach((field) => {\n            field.feedback = void 0;\n          });\n          return context.fields;\n        }\n      })\n    },\n    MARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        const missing = new Set(event.missing);\n        return {\n          defaultValues: event.defaultValues,\n          hidden: /* @__PURE__ */ new Set([...event.required.filter((f) => !missing.has(f)), ...event.optional]),\n          missing,\n          optional: new Set(event.optional),\n          progressive: true,\n          required: new Set(event.required)\n        };\n      })\n    },\n    UNMARK_AS_PROGRESSIVE: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        defaultValues: /* @__PURE__ */ new Map(),\n        hidden: void 0,\n        missing: void 0,\n        optional: void 0,\n        progressive: false,\n        required: void 0\n      })\n    },\n    PREFILL_DEFAULT_VALUES: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => {\n        return {\n          defaultValues: event.defaultValues\n        };\n      })\n    }\n  }\n});\n\n// src/internals/utils/inspector/index.ts\nvar inspect;\nif (false) {}\n\n// src/internals/machines/form/form.context.ts\nvar FormMachineContext = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.createActorContext)(FormMachine, { inspect });\nvar FormStoreProvider = FormMachineContext.Provider;\nvar useFormStore = FormMachineContext.useActorRef;\nvar useFormSelector = FormMachineContext.useSelector;\nvar globalErrorsSelector = (state) => state.context.errors;\nvar fieldValueSelector = (name) => (state) => {\n  var _a3;\n  return name ? (_a3 = state.context.fields.get(name)) == null ? void 0 : _a3.value : \"\";\n};\nvar fieldHasValueSelector = (name) => (state) => Boolean(fieldValueSelector(name)(state));\nvar fieldFeedbackSelector = (name) => (state) => {\n  var _a3;\n  return name ? (_a3 = state.context.fields.get(name)) == null ? void 0 : _a3.feedback : void 0;\n};\n\n// src/react/common/form/hooks/use-field-feedback.ts\nfunction useFieldFeedback({ name }) {\n  const feedback = useFormSelector(fieldFeedbackSelector(name));\n  return {\n    feedback\n  };\n}\n\n// src/react/common/form/hooks/use-field.ts\nfunction useField({ name }) {\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  const { feedback } = useFieldFeedback({ name });\n  const shouldBeHidden = false;\n  const hasError = feedback ? feedback.type === \"error\" : false;\n  return {\n    hasValue,\n    props: {\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      serverInvalid: hasError\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-field-context.ts\n\nvar FieldContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nvar useFieldContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(FieldContext);\n\n// src/react/common/form/types.ts\nvar FIELD_STATES = {\n  success: \"success\",\n  error: \"error\",\n  idle: \"idle\",\n  warning: \"warning\",\n  info: \"info\"\n};\n\n// src/react/common/form/hooks/use-field-state.ts\nfunction useFieldState({ name }) {\n  const { feedback } = useFieldFeedback({ name });\n  const hasValue = useFormSelector(fieldHasValueSelector(name));\n  let state = FIELD_STATES.idle;\n  if (!hasValue) {\n    state = FIELD_STATES.idle;\n  }\n  switch (feedback == null ? void 0 : feedback.type) {\n    case \"error\":\n      state = FIELD_STATES.error;\n      break;\n    case \"warning\":\n      state = FIELD_STATES.warning;\n      break;\n    case \"info\":\n      state = FIELD_STATES.info;\n      break;\n    case \"success\":\n      state = FIELD_STATES.success;\n      break;\n    default:\n      break;\n  }\n  return {\n    state\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\n\n\n// src/react/common/form/hooks/use-global-errors.ts\nfunction useGlobalErrors() {\n  const errors = useFormSelector(globalErrorsSelector);\n  return {\n    errors\n  };\n}\n\n// src/react/common/form/hooks/use-form.ts\nfunction useForm({ flowActor }) {\n  const { errors } = useGlobalErrors();\n  const onSubmit = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      event.preventDefault();\n      if (flowActor) {\n        flowActor.send({ type: \"SUBMIT\", action: \"submit\" });\n      }\n    },\n    [flowActor]\n  );\n  return {\n    props: {\n      ...errors.length > 0 ? { \"data-global-error\": true } : {},\n      onSubmit\n    }\n  };\n}\n\n// src/react/common/form/hooks/use-input.tsx\n\n\n\n// src/react/hooks/use-password.hook.ts\n\n\n\n\n// src/react/utils/generate-password-error-text.ts\nvar errorMessages = {\n  max_length: [\"less than %length% characters\", \"length\"],\n  min_length: [\"%length% or more characters\", \"length\"],\n  require_numbers: \"a number\",\n  require_lowercase: \"a lowercase letter\",\n  require_uppercase: \"an uppercase letter\",\n  require_special_char: \"a special character\"\n};\nvar createListFormat = (message) => {\n  let messageWithPrefix;\n  if (\"ListFormat\" in Intl) {\n    const formatter = new Intl.ListFormat(\"en\", { style: \"long\", type: \"conjunction\" });\n    messageWithPrefix = formatter.format(message);\n  } else {\n    messageWithPrefix = message.join(\", \");\n  }\n  return messageWithPrefix;\n};\nfunction buildErrorTuple(key, config) {\n  switch (key) {\n    case \"max_length\":\n      return [key, { max_length: config.max_length }];\n    case \"min_length\":\n      return [key, { min_length: config.min_length }];\n    case \"require_special_char\":\n      return [key, { allowed_special_characters: config.allowed_special_characters }];\n    default:\n      return key;\n  }\n}\nvar generatePasswordErrorText = ({ config, failedValidations }) => {\n  const codes = [];\n  if (!failedValidations || Object.keys(failedValidations).length === 0) {\n    return {\n      codes,\n      message: \"\"\n    };\n  }\n  const hasMinLengthError = (failedValidations == null ? void 0 : failedValidations.min_length) || false;\n  const messages = Object.entries(failedValidations).filter((k) => hasMinLengthError ? k[0] === \"min_length\" : true).filter(([, v]) => !!v).map(([k]) => {\n    const entry = k;\n    const errorTuple = buildErrorTuple(entry, config);\n    codes.push(errorTuple);\n    const errorKey = errorMessages[entry];\n    if (Array.isArray(errorKey)) {\n      const [msg, replaceValue] = errorKey;\n      return msg.replace(`%${replaceValue}%`, config[k]);\n    }\n    return errorKey;\n  });\n  const messageWithPrefix = createListFormat(messages);\n  return {\n    codes,\n    message: `Your password must contain ${messageWithPrefix}.`\n  };\n};\n\n// src/react/hooks/use-password.hook.ts\nvar usePassword = (callbacks) => {\n  var _a3;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  const passwordSettings = (_a3 = clerk.__unstable__environment) == null ? void 0 : _a3.userSettings.passwordSettings;\n  const { disable_hibp, min_zxcvbn_strength, show_zxcvbn, ...config } = passwordSettings || {};\n  const {\n    onValidationError = _clerk_shared__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationSuccess = _clerk_shared__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationWarning = _clerk_shared__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationInfo = _clerk_shared__WEBPACK_IMPORTED_MODULE_8__.noop,\n    onValidationComplexity\n  } = callbacks || {};\n  const onValidate = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (res) => {\n      var _a4, _b3, _c;\n      if (res.complexity) {\n        if (Object.values(res == null ? void 0 : res.complexity).length > 0) {\n          const { message, codes } = generatePasswordErrorText({\n            config,\n            failedValidations: res.complexity\n          });\n          if ((_a4 = res.complexity) == null ? void 0 : _a4.min_length) {\n            return onValidationInfo(message, codes);\n          }\n          return onValidationError(message, codes);\n        }\n      }\n      if (((_b3 = res == null ? void 0 : res.strength) == null ? void 0 : _b3.state) === \"fail\") {\n        const keys = res.strength.keys;\n        const error = keys.map((key) => get(zxcvbnKeys, key)).join(\" \");\n        return onValidationError(error, keys);\n      }\n      if (((_c = res == null ? void 0 : res.strength) == null ? void 0 : _c.state) === \"pass\") {\n        const keys = res.strength.keys;\n        const error = keys.map((key) => get(zxcvbnKeys, key)).join(\" \");\n        return onValidationWarning(error, keys);\n      }\n      return onValidationSuccess();\n    },\n    [callbacks, config]\n  );\n  const validatePassword = react__WEBPACK_IMPORTED_MODULE_1__.useMemo(() => {\n    return (password) => {\n      return clerk.client.signUp.validatePassword(password, {\n        onValidation: onValidate,\n        onValidationComplexity\n      });\n    };\n  }, [onValidate]);\n  return {\n    validatePassword\n  };\n};\nvar get = (t, path) => path.split(\".\").reduce((r, k) => r == null ? void 0 : r[k], t);\nvar zxcvbnKeys = {\n  unstable__errors: {\n    zxcvbn: {\n      couldBeStronger: \"Your password works, but could be stronger. Try adding more characters.\",\n      goodPassword: \"Your password meets all the necessary requirements.\",\n      notEnough: \"Your password is not strong enough.\",\n      suggestions: {\n        allUppercase: \"Capitalize some, but not all letters.\",\n        anotherWord: \"Add more words that are less common.\",\n        associatedYears: \"Avoid years that are associated with you.\",\n        capitalization: \"Capitalize more than the first letter.\",\n        dates: \"Avoid dates and years that are associated with you.\",\n        l33t: \"Avoid predictable letter substitutions like '@' for 'a'.\",\n        longerKeyboardPattern: \"Use longer keyboard patterns and change typing direction multiple times.\",\n        noNeed: \"You can create strong passwords without using symbols, numbers, or uppercase letters.\",\n        pwned: \"If you use this password elsewhere, you should change it.\",\n        recentYears: \"Avoid recent years.\",\n        repeated: \"Avoid repeated words and characters.\",\n        reverseWords: \"Avoid reversed spellings of common words.\",\n        sequences: \"Avoid common character sequences.\",\n        useWords: \"Use multiple words, but avoid common phrases.\"\n      },\n      warnings: {\n        common: \"This is a commonly used password.\",\n        commonNames: \"Common names and surnames are easy to guess.\",\n        dates: \"Dates are easy to guess.\",\n        extendedRepeat: 'Repeated character patterns like \"abcabcabc\" are easy to guess.',\n        keyPattern: \"Short keyboard patterns are easy to guess.\",\n        namesByThemselves: \"Single names or surnames are easy to guess.\",\n        pwned: \"Your password was exposed by a data breach on the Internet.\",\n        recentYears: \"Recent years are easy to guess.\",\n        sequences: 'Common character sequences like \"abc\" are easy to guess.',\n        similarToCommon: \"This is similar to a commonly used password.\",\n        simpleRepeat: 'Repeated characters like \"aaa\" are easy to guess.',\n        straightRow: \"Straight rows of keys on your keyboard are easy to guess.\",\n        topHundred: \"This is a frequently used password.\",\n        topTen: \"This is a heavily used password.\",\n        userInputs: \"There should not be any personal or page related data.\",\n        wordByItself: \"Single words are easy to guess.\"\n      }\n    }\n  }\n};\n\n// src/react/common/form/otp.tsx\n\n\n\nvar ZERO = [0, 0];\nvar OUTSIDE = [-1, -1];\nvar OTP_LENGTH_DEFAULT = 6;\nvar PASSWORD_MANAGER_OFFSET_DEFAULT = 40;\nvar OTPInput = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(function OTPInput2(props, ref) {\n  const { render, length, autoSubmit, ...rest } = props;\n  const hasRenderProp = typeof render !== \"undefined\";\n  if (hasRenderProp) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      OTPInputSegmented,\n      {\n        ...rest,\n        ref,\n        render,\n        length,\n        autoSubmit\n      }\n    );\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    OTPInputStandard,\n    {\n      ...rest,\n      ref,\n      length,\n      autoSubmit\n    }\n  );\n});\nvar OTPInputStandard = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput3(props, ref) {\n    const { length = OTP_LENGTH_DEFAULT, autoSubmit = false, ...rest } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a3, _b3;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b3 = (_a3 = innerRef.current) == null ? void 0 : _a3.form) == null ? void 0 : _b3.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n      {\n        ref: innerRef,\n        ...rest,\n        \"data-otp-input-standard\": true\n      }\n    );\n  }\n);\nvar OTPInputSegmented = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  function OTPInput4(props, ref) {\n    const {\n      className: userProvidedClassName,\n      render,\n      length = OTP_LENGTH_DEFAULT,\n      autoSubmit = false,\n      passwordManagerOffset = PASSWORD_MANAGER_OFFSET_DEFAULT,\n      ...rest\n    } = props;\n    const innerRef = react__WEBPACK_IMPORTED_MODULE_1__.useRef(null);\n    const [selectionRange, setSelectionRange] = react__WEBPACK_IMPORTED_MODULE_1__.useState(props.autoFocus ? ZERO : OUTSIDE);\n    const [isHovering, setIsHovering] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const isFocused = () => document.activeElement === innerRef.current;\n    react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle(ref, () => innerRef.current, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect(() => {\n      if (document.activeElement !== innerRef.current) {\n        return;\n      }\n      setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n    }, [props.value]);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      function onSelectionChange() {\n        if (!isFocused()) {\n          return;\n        }\n        setSelectionRange((cur) => selectionRangeUpdater(cur, innerRef));\n      }\n      document.addEventListener(\"selectionchange\", onSelectionChange, { capture: true });\n      return () => document.removeEventListener(\"selectionchange\", onSelectionChange);\n    }, []);\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      var _a3, _b3;\n      if (String(props.value).length === length && autoSubmit) {\n        (_b3 = (_a3 = innerRef.current) == null ? void 0 : _a3.form) == null ? void 0 : _b3.requestSubmit();\n      }\n    }, [props.value, length, autoSubmit]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxs)(\n      \"div\",\n      {\n        \"data-otp-input-wrapper\": true,\n        style: wrapperStyle,\n        children: [\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"style\", { children: `\n      input[data-otp-input-segmented]::selection {\n        color: transparent;\n        background-color: transparent;\n      }\n      ` }),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control,\n            {\n              \"data-otp-input-segmented\": true,\n              ref: innerRef,\n              ...rest,\n              onFocus: (event) => {\n                var _a3;\n                if (innerRef.current) {\n                  const start = Math.min(innerRef.current.value.length, length - 1);\n                  const end = innerRef.current.value.length;\n                  innerRef.current.setSelectionRange(start, end);\n                  setSelectionRange([start, end]);\n                }\n                (_a3 = rest == null ? void 0 : rest.onFocus) == null ? void 0 : _a3.call(rest, event);\n              },\n              onBlur: (event) => {\n                var _a3;\n                setSelectionRange([-1, -1]);\n                (_a3 = rest == null ? void 0 : rest.onBlur) == null ? void 0 : _a3.call(rest, event);\n              },\n              onMouseOver: (event) => {\n                var _a3;\n                if (!isFocused()) {\n                  setIsHovering(true);\n                }\n                (_a3 = props.onMouseOver) == null ? void 0 : _a3.call(props, event);\n              },\n              onMouseLeave: (event) => {\n                var _a3;\n                setIsHovering(false);\n                (_a3 = props.onMouseLeave) == null ? void 0 : _a3.call(props, event);\n              },\n              style: {\n                ...inputStyle,\n                clipPath: `inset(0 calc(1ch + ${passwordManagerOffset}px) 0 0)`,\n                width: `calc(100% + 1ch + ${passwordManagerOffset}px)`\n              }\n            }\n          ),\n          /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n            \"div\",\n            {\n              className: userProvidedClassName,\n              \"aria-hidden\": true,\n              style: segmentWrapperStyle,\n              children: Array.from({ length }).map((_, i) => {\n                var _a3, _b3;\n                const isHovered = isHovering && !isFocused();\n                const isCursor = selectionRange[0] === selectionRange[1] && selectionRange[0] === i;\n                const isSelected = ((_a3 = selectionRange[0]) != null ? _a3 : -1) <= i && ((_b3 = selectionRange[1]) != null ? _b3 : -1) > i;\n                return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, { children: render({\n                  value: String(props.value)[i] || \"\",\n                  status: isHovered ? \"hovered\" : isCursor ? \"cursor\" : isSelected ? \"selected\" : \"none\",\n                  index: i\n                }) }, `otp-segment-${i}`);\n              })\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nfunction selectionRangeUpdater(cur, inputRef) {\n  var _a3, _b3, _c, _d, _e, _f, _g, _h, _i;\n  let updated = [\n    (_b3 = (_a3 = inputRef.current) == null ? void 0 : _a3.selectionStart) != null ? _b3 : 0,\n    (_d = (_c = inputRef.current) == null ? void 0 : _c.selectionEnd) != null ? _d : 0,\n    (_f = (_e = inputRef.current) == null ? void 0 : _e.selectionDirection) != null ? _f : null\n  ];\n  if (cur[0] === updated[0] && cur[1] === updated[1]) {\n    return cur;\n  }\n  if (updated[0] === 0 && updated[1] === 1) {\n    updated[2] = \"forward\";\n  }\n  if (updated[0] === updated[1]) {\n    if (updated[0] > 0 && cur[0] === updated[0] && cur[1] === updated[0] + 1) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    } else if (typeof ((_g = inputRef.current) == null ? void 0 : _g.value[updated[0]]) !== \"undefined\") {\n      updated = [updated[0], updated[1] + 1, \"backward\"];\n    } else if (updated[0] >= OTP_LENGTH_DEFAULT) {\n      updated = [updated[0] - 1, updated[1], \"backward\"];\n    }\n  }\n  (_i = inputRef.current) == null ? void 0 : _i.setSelectionRange(updated[0], updated[1], (_h = updated[2]) != null ? _h : void 0);\n  return [updated[0], updated[1]];\n}\nvar wrapperStyle = {\n  position: \"relative\",\n  userSelect: \"none\"\n};\nvar inputStyle = {\n  display: \"block\",\n  background: \"transparent\",\n  opacity: 0,\n  outline: \"transparent solid 0px\",\n  appearance: \"none\",\n  color: \"transparent\",\n  position: \"absolute\",\n  inset: 0,\n  caretColor: \"transparent\",\n  border: \"0px solid transparent\",\n  // width is handled inline\n  height: \"100%\",\n  letterSpacing: \"-1rem\"\n};\nvar segmentWrapperStyle = {\n  zIndex: 1,\n  pointerEvents: \"none\"\n};\n\n// src/react/common/form/utils/enrich-field-state.ts\nfunction enrichFieldState(validity, fieldState) {\n  return (validity == null ? void 0 : validity.valid) === false ? FIELD_STATES.error : fieldState;\n}\n\n// src/react/common/form/utils/determine-input-type-from-name.ts\nfunction determineInputTypeFromName(name) {\n  if (name === \"password\" || name === \"confirmPassword\" || name === \"currentPassword\" || name === \"newPassword\") {\n    return \"password\";\n  }\n  if (name === \"emailAddress\") {\n    return \"email\";\n  }\n  if (name === \"phoneNumber\") {\n    return \"tel\";\n  }\n  if (name === \"code\") {\n    return \"otp\";\n  }\n  if (name === \"backup_code\") {\n    return \"backup_code\";\n  }\n  return \"text\";\n}\n\n// src/react/common/form/hooks/use-previous.ts\n\nfunction usePrevious(value) {\n  const ref = react__WEBPACK_IMPORTED_MODULE_1__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n// src/react/common/form/hooks/use-validity-state-context.ts\n\nvar ValidityStateContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nvar useValidityStateContext = () => react__WEBPACK_IMPORTED_MODULE_1__.useContext(ValidityStateContext);\n\n// src/react/common/form/hooks/use-input.tsx\nfunction useInput({\n  name: inputName,\n  value: providedValue,\n  checked: providedChecked,\n  onChange: onChangeProp,\n  onBlur: onBlurProp,\n  onFocus: onFocusProp,\n  type: inputType,\n  ...passthroughProps\n}) {\n  const fieldContext = useFieldContext();\n  const rawName = inputName || (fieldContext == null ? void 0 : fieldContext.name);\n  const name = rawName === \"backup_code\" ? \"code\" : rawName;\n  const { state: fieldState } = useFieldState({ name });\n  const validity = useValidityStateContext();\n  if (!rawName || !name) {\n    throw new Error(\"Clerk: <Input /> must be wrapped in a <Field> component or have a name prop.\");\n  }\n  const ref = useFormStore();\n  const [hasPassedValiation, setHasPassedValidation] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n  const { validatePassword } = usePassword({\n    onValidationComplexity: (hasPassed) => setHasPassedValidation(hasPassed),\n    onValidationSuccess: () => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: { name, feedback: { type: \"success\", message: \"Your password meets all the necessary requirements.\" } }\n      });\n    },\n    onValidationError: (error, codes) => {\n      if (error) {\n        ref.send({\n          type: \"FIELD.FEEDBACK.SET\",\n          field: {\n            name,\n            feedback: {\n              type: \"error\",\n              message: new ClerkElementsFieldError(\"password-validation-error\", error),\n              codes\n            }\n          }\n        });\n      }\n    },\n    onValidationWarning: (warning, codes) => ref.send({\n      type: \"FIELD.FEEDBACK.SET\",\n      field: { name, feedback: { type: \"warning\", message: warning, codes } }\n    }),\n    onValidationInfo: (info, codes) => {\n      ref.send({\n        type: \"FIELD.FEEDBACK.SET\",\n        field: {\n          name,\n          feedback: {\n            type: \"info\",\n            message: info,\n            codes\n          }\n        }\n      });\n    }\n  });\n  const value = useFormSelector(fieldValueSelector(name));\n  const prevValue = usePrevious(value);\n  const hasValue = Boolean(value);\n  const type = inputType != null ? inputType : determineInputTypeFromName(rawName);\n  let nativeFieldType = type;\n  let shouldValidatePassword = false;\n  if (type === \"password\" || type === \"text\") {\n    shouldValidatePassword = Boolean(passthroughProps.validatePassword);\n  }\n  if (nativeFieldType === \"otp\" || nativeFieldType === \"backup_code\") {\n    nativeFieldType = \"text\";\n  }\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    ref.send({\n      type: \"FIELD.ADD\",\n      field: { name, type: nativeFieldType, value: providedValue, checked: providedChecked }\n    });\n    return () => ref.send({ type: \"FIELD.REMOVE\", field: { name } });\n  }, [ref]);\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (!name) {\n      return;\n    }\n    if (type === \"checkbox\" && providedChecked !== void 0 || type !== \"checkbox\" && providedValue !== void 0) {\n      ref.send({\n        type: \"FIELD.UPDATE\",\n        field: { name, value: providedValue, checked: providedChecked }\n      });\n    }\n  }, [name, type, ref, providedValue, providedChecked]);\n  const onChange = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onChangeProp == null ? void 0 : onChangeProp(event);\n      if (!name) {\n        return;\n      }\n      ref.send({ type: \"FIELD.UPDATE\", field: { name, value: event.target.value, checked: event.target.checked } });\n      if (shouldValidatePassword) {\n        validatePassword(event.target.value);\n      }\n    },\n    [ref, name, onChangeProp, shouldValidatePassword, validatePassword]\n  );\n  const onBlur = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onBlurProp == null ? void 0 : onBlurProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onBlurProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const onFocus = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n    (event) => {\n      onFocusProp == null ? void 0 : onFocusProp(event);\n      if (shouldValidatePassword && event.target.value !== prevValue) {\n        validatePassword(event.target.value);\n      }\n    },\n    [onFocusProp, shouldValidatePassword, validatePassword, prevValue]\n  );\n  const shouldBeHidden = false;\n  const Element = type === \"otp\" ? OTPInput : _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Control;\n  let props = {};\n  if (type === \"otp\") {\n    const p = passthroughProps;\n    const length = p.length || OTP_LENGTH_DEFAULT;\n    props = {\n      \"data-otp-input\": true,\n      autoComplete: \"one-time-code\",\n      inputMode: \"numeric\",\n      pattern: `[0-9]{${length}}`,\n      minLength: length,\n      maxLength: length,\n      onChange: (event) => {\n        event.currentTarget.value = event.currentTarget.value.replace(/\\D+/g, \"\");\n        onChange(event);\n      },\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"backup_code\") {\n    props = {\n      autoComplete: \"off\",\n      type: \"text\",\n      spellCheck: false\n    };\n  } else if (type === \"password\" && shouldValidatePassword) {\n    props = {\n      \"data-has-passed-validation\": hasPassedValiation ? true : void 0\n    };\n  }\n  const { validatePassword: _1, ...rest } = passthroughProps;\n  return {\n    Element,\n    props: {\n      type,\n      value: value != null ? value : \"\",\n      onChange,\n      onBlur,\n      onFocus,\n      \"data-hidden\": shouldBeHidden ? true : void 0,\n      \"data-has-value\": hasValue ? true : void 0,\n      \"data-state\": enrichFieldState(validity, fieldState),\n      ...props,\n      ...rest\n    }\n  };\n}\n\n// src/react/common/form/field.tsx\n\nvar DISPLAY_NAME = \"ClerkElementsField\";\nvar DISPLAY_NAME_INNER = \"ClerkElementsFieldInner\";\nvar Field = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ alwaysShow, ...rest }, forwardedRef) => {\n  var _a3;\n  const formRef = useFormStore();\n  const formCtx = formRef.getSnapshot().context;\n  const isHiddenField = formCtx.progressive && Boolean((_a3 = formCtx.hidden) == null ? void 0 : _a3.has(rest.name));\n  const shouldHide = alwaysShow ? false : isHiddenField;\n  return shouldHide ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(FieldContext.Provider, { value: { name: rest.name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    FieldInner,\n    {\n      ...rest,\n      ref: forwardedRef\n    }\n  ) });\n});\nField.displayName = DISPLAY_NAME;\nvar FieldInner = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef((props, forwardedRef) => {\n  const { children, ...rest } = props;\n  const field = useField({ name: rest.name });\n  const { state: fieldState } = useFieldState({ name: rest.name });\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Field,\n    {\n      ...field.props,\n      ...rest,\n      ref: forwardedRef,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.ValidityState, { children: (validity) => {\n        const enrichedFieldState = enrichFieldState(validity, fieldState);\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ValidityStateContext.Provider, { value: validity, children: typeof children === \"function\" ? children(enrichedFieldState) : children });\n      } })\n    }\n  );\n});\nFieldInner.displayName = DISPLAY_NAME_INNER;\n\n// src/react/common/form/field-error.tsx\n\n\n\n\n// src/react/utils/is-react-fragment.ts\n\nfunction isReactFragment(node) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(node) && node.type === react__WEBPACK_IMPORTED_MODULE_1__.Fragment;\n}\n\n// src/react/common/form/field-error.tsx\n\nvar DISPLAY_NAME2 = \"ClerkElementsFieldError\";\nvar FieldError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, name, ...rest }, forwardedRef) => {\n    const fieldContext = useFieldContext();\n    const rawFieldName = (fieldContext == null ? void 0 : fieldContext.name) || name;\n    const fieldName = rawFieldName === \"backup_code\" ? \"code\" : rawFieldName;\n    const { feedback } = useFieldFeedback({ name: fieldName });\n    if (!((feedback == null ? void 0 : feedback.type) === \"error\")) {\n      return null;\n    }\n    const error = feedback.message;\n    if (!error) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"span\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<FieldError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.FormMessage,\n      {\n        \"data-error-code\": error.code,\n        ...rest,\n        ref: forwardedRef,\n        asChild: true,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { children: child || error.message })\n      }\n    );\n  }\n);\nFieldError.displayName = DISPLAY_NAME2;\n\n// src/react/common/form/field-state.tsx\nvar DISPLAY_NAME3 = \"ClerkElementsFieldState\";\nfunction FieldState({ children }) {\n  const field = useFieldContext();\n  const { feedback } = useFieldFeedback({ name: field == null ? void 0 : field.name });\n  const { state } = useFieldState({ name: field == null ? void 0 : field.name });\n  const validity = useValidityStateContext();\n  const message = (feedback == null ? void 0 : feedback.message) instanceof ClerkElementsFieldError ? feedback.message.message : feedback == null ? void 0 : feedback.message;\n  const codes = feedback == null ? void 0 : feedback.codes;\n  const fieldState = { state: enrichFieldState(validity, state), message, codes };\n  return children(fieldState);\n}\nFieldState.displayName = DISPLAY_NAME3;\n\n// node_modules/@radix-ui/primitive/dist/index.mjs\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler == null ? void 0 : originalEventHandler(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler == null ? void 0 : ourEventHandler(event);\n    }\n  };\n}\n\n// src/react/common/form/form.tsx\n\n\n\nvar DISPLAY_NAME4 = \"ClerkElementsForm\";\nvar Form = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ flowActor, onSubmit, ...rest }, forwardedRef) => {\n  const form = useForm({ flowActor });\n  const { onSubmit: internalOnSubmit, ...internalFormProps } = form.props;\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Form,\n    {\n      ...internalFormProps,\n      ...rest,\n      onSubmit: composeEventHandlers(internalOnSubmit, onSubmit),\n      ref: forwardedRef\n    }\n  );\n});\nForm.displayName = DISPLAY_NAME4;\n\n// src/react/common/form/global-error.tsx\n\n\n\nvar DISPLAY_NAME5 = \"ClerkElementsGlobalError\";\nvar GlobalError = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild = false, children, code, ...rest }, forwardedRef) => {\n    const { errors } = useGlobalErrors();\n    const error = errors == null ? void 0 : errors[0];\n    if (!error || code && error.code !== code) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"div\";\n    const child = typeof children === \"function\" ? children(error) : children;\n    if (isReactFragment(child)) {\n      throw new ClerkElementsRuntimeError(\"<GlobalError /> cannot render a Fragment as a child.\");\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        role: \"alert\",\n        ...rest,\n        ref: forwardedRef,\n        children: child || error.message\n      }\n    );\n  }\n);\nGlobalError.displayName = DISPLAY_NAME5;\n\n// src/react/common/form/input.tsx\n\n\n\n\n\n// src/react/utils/create-context-from-actor-ref.ts\n\n\nfunction createContextFromActorRef(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children, actorRef }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: actorRef\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingActor = false) {\n    const actorRef = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingActor && !actorRef) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return actorRef;\n  }\n  function useSelector6(selector, compare) {\n    const actor = useContext9();\n    return (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selector, compare);\n  }\n  return {\n    Provider,\n    useActorRef: useContext9,\n    useSelector: useSelector6\n  };\n}\n\n// src/react/sign-in/context/router.context.ts\nvar SignInRouterCtx = createContextFromActorRef(\"SignInRouterCtx\");\nfunction useSignInStep(name) {\n  return SignInRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignInStartStep = () => useSignInStep(\"start\");\nvar useSignInFirstFactorStep = () => useSignInStep(\"firstFactor\");\nvar useSignInSecondFactorStep = () => useSignInStep(\"secondFactor\");\nvar useSignInResetPasswordStep = () => useSignInStep(\"resetPassword\");\nvar useSignInPasskeyAutofill = () => SignInRouterCtx.useSelector((state) => state.context.webAuthnAutofillSupport);\n\n// src/react/sign-in/context/sign-in-strategy.context.ts\n\nvar SignInStrategyContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  strategy: void 0\n});\nfunction useSignInStrategy() {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(SignInStrategyContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      \"useSignInStrategy must be used within a <SignIn.Strategy> or <SignIn.SupportedStrategy> component.\"\n    );\n  }\n  const { strategy } = ctx;\n  return strategy;\n}\n\n// src/react/sign-in/context/strategies.context.ts\n\nvar StrategiesContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n  current: void 0,\n  isActive: (_name) => false,\n  preferred: void 0\n});\nfunction useStrategy(name) {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(StrategiesContext);\n  if (!ctx) {\n    throw new ClerkElementsRuntimeError(\n      'useStrategy must be used within a <SignIn.Step name=\"verifications\"> component. Did you mean to `import { Step } from \"@clerk/elements/sign-up\"` instead?'\n    );\n  }\n  const { current, preferred, isActive } = ctx;\n  return {\n    current,\n    preferred,\n    get active() {\n      return isActive(name);\n    }\n  };\n}\n\n// src/react/common/form/input.tsx\n\nvar DISPLAY_NAME6 = \"ClerkElementsInput\";\nvar DISPLAY_NAME_PASSKEYS_AUTOFILL = \"ClerkElementsInputWithPasskeyAutofill\";\nvar Input = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    var _a3, _b3, _c;\n    const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n    const field = useInput(props);\n    const hasPasskeyAutofillProp = Boolean((_a3 = field.props.autoComplete) == null ? void 0 : _a3.includes(\"webauthn\"));\n    const allowedTypeForPasskey = [\"text\", \"email\", \"tel\"].includes(field.props.type);\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    (_c = clerk.telemetry) == null ? void 0 : _c.record(\n      (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_Input\", {\n        type: (_b3 = props.type) != null ? _b3 : false,\n        // @ts-expect-error - Depending on type the props can be different\n        render: Boolean(props == null ? void 0 : props.render),\n        // @ts-expect-error - Depending on type the props can be different\n        asChild: Boolean(props == null ? void 0 : props.asChild),\n        // @ts-expect-error - Depending on type the props can be different\n        validatePassword: Boolean(props == null ? void 0 : props.validatePassword)\n      })\n    );\n    if (signInRouterRef && hasPasskeyAutofillProp && allowedTypeForPasskey) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        InputWithPasskeyAutofill,\n        {\n          ref: forwardedRef,\n          ...props\n        }\n      );\n    }\n    if (hasPasskeyAutofillProp && !allowedTypeForPasskey) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used with <Input type=\"text\"> or <Input type=\"email\">`\n      );\n    } else if (hasPasskeyAutofillProp) {\n      _clerk_shared_logger__WEBPACK_IMPORTED_MODULE_12__.logger.warnOnce(\n        `<Input autoComplete=\"webauthn\"> can only be used inside <SignIn> in order to trigger a sign-in attempt, otherwise it will be ignored.`\n      );\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInput.displayName = DISPLAY_NAME6;\nvar InputWithPasskeyAutofill = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  (props, forwardedRef) => {\n    const signInRouterRef = SignInRouterCtx.useActorRef(true);\n    const passkeyAutofillSupported = useSignInPasskeyAutofill();\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n      if (passkeyAutofillSupported) {\n        signInRouterRef == null ? void 0 : signInRouterRef.send({ type: \"AUTHENTICATE.PASSKEY.AUTOFILL\" });\n      }\n    }, [passkeyAutofillSupported, signInRouterRef]);\n    const field = useInput(props);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      field.Element,\n      {\n        ref: forwardedRef,\n        ...field.props\n      }\n    );\n  }\n);\nInputWithPasskeyAutofill.displayName = DISPLAY_NAME_PASSKEYS_AUTOFILL;\n\n// src/react/common/form/label.tsx\n\nvar DISPLAY_NAME7 = \"ClerkElementsLabel\";\nvar Label = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Label;\nLabel.displayName = DISPLAY_NAME7;\n\n// src/react/common/form/submit.tsx\n\nvar DISPLAY_NAME8 = \"ClerkElementsSubmit\";\nvar Submit = _radix_ui_react_form__WEBPACK_IMPORTED_MODULE_10__.Submit;\nSubmit.displayName = DISPLAY_NAME8;\n\n// src/react/common/connections.tsx\n\n\n\n// src/react/hooks/use-active-tags.hook.ts\n\nvar ActiveTagsMode = {\n  any: \"any\",\n  all: \"all\"\n};\nfunction useActiveTags(actor, tags, mode = ActiveTagsMode.any) {\n  const state = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n    actor,\n    (s) => s,\n    (prev, next) => prev.tags === next.tags\n  );\n  if (!state) {\n    return false;\n  }\n  if (typeof tags === \"string\") {\n    return state.hasTag(tags);\n  }\n  if (!Array.isArray(tags)) {\n    throw new Error(\"Invalid tags parameter provided to useActiveTags\");\n  }\n  switch (mode) {\n    case ActiveTagsMode.any: {\n      const matching = new Set(tags.filter((tag) => state.hasTag(tag)));\n      return { active: matching.size > 0, activeTags: matching };\n    }\n    case ActiveTagsMode.all:\n      return tags.length === state.tags.size ? tags.every((tag) => state.hasTag(tag)) : false;\n    default:\n      return false;\n  }\n}\n\n// src/react/hooks/use-third-party-provider.hook.ts\n\n\n\n// src/utils/third-party-strategies.ts\n\n\n// src/utils/clerk-js.ts\nvar fromEntries = (iterable) => {\n  return [...iterable].reduce((obj, [key, val]) => {\n    obj[key] = val;\n    return obj;\n  }, {});\n};\nfunction iconImageUrl(id) {\n  return `https://img.clerk.com/static/${id}.svg`;\n}\n\n// src/utils/third-party-strategies.ts\nvar oauthStrategies = _clerk_types__WEBPACK_IMPORTED_MODULE_14__.OAUTH_PROVIDERS.map((p) => p.strategy);\nvar providerToDisplayData = fromEntries(\n  [..._clerk_types__WEBPACK_IMPORTED_MODULE_14__.OAUTH_PROVIDERS, ..._clerk_types__WEBPACK_IMPORTED_MODULE_14__.WEB3_PROVIDERS].map((p) => {\n    return [p.provider, { iconUrl: iconImageUrl(p.provider), name: p.name, strategy: p.strategy }];\n  })\n);\nvar strategyToDisplayData = fromEntries(\n  [..._clerk_types__WEBPACK_IMPORTED_MODULE_14__.OAUTH_PROVIDERS, ..._clerk_types__WEBPACK_IMPORTED_MODULE_14__.WEB3_PROVIDERS].map((p) => {\n    return [p.strategy, { iconUrl: iconImageUrl(p.provider), id: p.provider, name: p.name }];\n  })\n);\nfunction isSamlStrategy(strategy) {\n  return strategy === \"saml\";\n}\nfunction isWeb3Strategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"web3_\") ? strategy : `web3_${strategy}_signature`);\n}\nfunction isAuthenticatableOauthStrategy(strategy, available) {\n  return available.includes(strategy.startsWith(\"oauth_\") ? strategy : `oauth_${strategy}`);\n}\nvar emptyThirdPartyProviders = {\n  authenticatableOauthStrategies: [],\n  providerToDisplayData: {},\n  strategies: [],\n  strategyToDisplayData: {},\n  web3Strategies: []\n};\nvar getEnabledThirdPartyProviders = (environment) => {\n  if (!(environment == null ? void 0 : environment.userSettings)) {\n    return emptyThirdPartyProviders;\n  }\n  const { socialProviderStrategies, web3FirstFactors, authenticatableSocialStrategies } = environment.userSettings;\n  const knownSocialProviderStrategies = socialProviderStrategies.filter((s) => oauthStrategies.includes(s));\n  const knownAuthenticatableSocialStrategies = authenticatableSocialStrategies.filter((s) => oauthStrategies.includes(s));\n  return {\n    authenticatableOauthStrategies: [...knownAuthenticatableSocialStrategies],\n    providerToDisplayData,\n    strategies: [...knownSocialProviderStrategies, ...web3FirstFactors],\n    strategyToDisplayData,\n    web3Strategies: web3FirstFactors\n  };\n};\n\n// src/react/hooks/use-third-party-provider.hook.ts\nvar useIsProviderEnabled = (provider) => {\n  var _a3, _b3;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  if (!clerk.loaded) {\n    return null;\n  }\n  if (provider === \"saml\") {\n    return (_b3 = (_a3 = clerk.__unstable__environment) == null ? void 0 : _a3.userSettings.saml.enabled) != null ? _b3 : false;\n  }\n  const data = getEnabledThirdPartyProviders(clerk.__unstable__environment);\n  return isAuthenticatableOauthStrategy(provider, data.authenticatableOauthStrategies) || isWeb3Strategy(provider, data.web3Strategies);\n};\nvar useThirdPartyProvider = (ref, provider) => {\n  const isProviderEnabled = useIsProviderEnabled(provider);\n  const isSaml = isSamlStrategy(provider);\n  const details = isSaml ? {\n    name: \"SAML\",\n    strategy: \"saml\"\n  } : providerToDisplayData[provider];\n  const authenticate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(\n    (event) => {\n      if (!isProviderEnabled) {\n        return;\n      }\n      event.preventDefault();\n      if (isSaml) {\n        return ref.send({ type: \"AUTHENTICATE.SAML\" });\n      }\n      if (provider === \"metamask\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_metamask_signature\" });\n      }\n      if (provider === \"coinbase\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_coinbase_signature\" });\n      }\n      if (provider === \"coinbase_wallet\") {\n        return ref.send({ type: \"AUTHENTICATE.WEB3\", strategy: \"web3_coinbase_wallet_signature\" });\n      }\n      return ref.send({ type: \"AUTHENTICATE.OAUTH\", strategy: `oauth_${provider}` });\n    },\n    [provider, isProviderEnabled, isSaml, ref]\n  );\n  if (isProviderEnabled === false) {\n    const dashboardPath = `https://dashboard.clerk.com/last-active?path=/user-authentication/${provider === \"metamask\" ? \"web3\" : \"social-connections\"}`;\n    throw new ClerkElementsRuntimeError(\n      `You have used <Connection name=\"${provider}\"> which isn't enabled for your project. Enable ${details.name} in your Clerk dashboard: ${dashboardPath}`\n    );\n  }\n  return {\n    events: {\n      authenticate\n    },\n    ...details\n  };\n};\n\n// src/react/sign-up/context/router.context.ts\nvar SignUpRouterCtx = createContextFromActorRef(\"SignUpRouterCtx\");\nfunction useSignUpStep(name) {\n  return SignUpRouterCtx.useSelector((state) => state.children[name]);\n}\nvar useSignUpStartStep = () => useSignUpStep(\"start\");\nvar useSignUpContinueStep = () => useSignUpStep(\"continue\");\nvar useSignUpVerificationStep = () => useSignUpStep(\"verification\");\n\n// src/react/common/connections.tsx\n\nvar ConnectionContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\nvar useConnectionContext = () => {\n  const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ConnectionContext);\n  if (!ctx) {\n    throw new Error(\"useConnectionContext must be used within <Clerk.Connection>\");\n  }\n  return ctx;\n};\nfunction Connection({ asChild, name, ...rest }) {\n  const signInRef = SignInRouterCtx.useActorRef(true);\n  const signUpRef = SignUpRouterCtx.useActorRef(true);\n  const provider = useThirdPartyProvider(signInRef || signUpRef, name);\n  if (!provider) {\n    return null;\n  }\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n  const defaultProps = asChild ? {} : { type: \"button\" };\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(ConnectionContext.Provider, { value: provider, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      onClick: provider.events.authenticate,\n      ...defaultProps,\n      ...rest\n    }\n  ) });\n}\nfunction Icon({ asChild, ...rest }) {\n  const { iconUrl, name } = useConnectionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"img\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Comp,\n    {\n      alt: `${name} logo`,\n      src: iconUrl,\n      ...rest\n    }\n  );\n}\n\n// src/react/common/loading.tsx\n\n\n\n\n// src/react/hooks/use-loading.hook.ts\n\nvar selectLoading = (snapshot) => {\n  var _a3;\n  return (_a3 = snapshot == null ? void 0 : snapshot.context) == null ? void 0 : _a3.loading;\n};\nvar compareLoadingValue = (prev, next) => (prev == null ? void 0 : prev.isLoading) === (next == null ? void 0 : next.isLoading);\nfunction useLoading(actor) {\n  const loadingCtx = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actor, selectLoading, compareLoadingValue);\n  if (!loadingCtx) {\n    return [false, { step: void 0, strategy: void 0, action: void 0 }];\n  }\n  return [loadingCtx.isLoading, { step: loadingCtx.step, strategy: loadingCtx.strategy, action: loadingCtx.action }];\n}\n\n// src/react/sign-in/step.tsx\n\n\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\n\n\n// src/react/utils/create-context-for-dom-validation.ts\n\nfunction createContextForDomValidation(displayName) {\n  const ReactContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(false);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({ children }) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(\n      OriginalProvider,\n      {\n        value: true\n      },\n      children\n    );\n  }\n  Provider.displayName = displayName;\n  function useContext9(allowMissingContext = false) {\n    const context = react__WEBPACK_IMPORTED_MODULE_1__.useContext(ReactContext);\n    if (!allowMissingContext && !context) {\n      throw new Error(\n        `You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}.Provider> component.`\n      );\n    }\n    return context;\n  }\n  return {\n    Provider,\n    useDomValidation: useContext9\n  };\n}\n\n// src/react/utils/is-valid-component-type.ts\n\nfunction isValidComponentType(child, type) {\n  return react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(child) && child.type === type;\n}\n\n// src/react/sign-in/choose-session/choose-session.hooks.ts\n\nvar SignInActiveSessionContext = react__WEBPACK_IMPORTED_MODULE_1__.createContext(null);\nfunction useSignInActiveSessionContext() {\n  const ctx = react__WEBPACK_IMPORTED_MODULE_1__.useContext(SignInActiveSessionContext);\n  if (!ctx) {\n    throw new Error(\"SignInActiveSessionContext must be used within a SessionList/SignInSessionListItem\");\n  }\n  return ctx;\n}\nfunction useSignInChooseSessionIsActive() {\n  const routerRef = SignInRouterCtx.useActorRef();\n  return useActiveTags(routerRef, \"step:choose-session\");\n}\nfunction useSignInActiveSessionList(params) {\n  const { omitCurrent = true } = params || {};\n  return SignInRouterCtx.useSelector((state) => {\n    var _a3, _b3, _c, _d;\n    const activeSessions = ((_b3 = (_a3 = state.context.clerk) == null ? void 0 : _a3.client) == null ? void 0 : _b3.activeSessions) || [];\n    const currentSessionId = (_d = (_c = state.context.clerk) == null ? void 0 : _c.session) == null ? void 0 : _d.id;\n    const filteredSessions = omitCurrent ? activeSessions.filter((s) => s.id !== currentSessionId) : activeSessions;\n    return filteredSessions.map((s) => ({\n      id: s.id,\n      ...s.publicUserData\n    }));\n  });\n}\n\n// src/react/sign-in/choose-session/choose-session.tsx\n\nvar SignInChooseSessionCtx = createContextForDomValidation(\"SignInChooseSessionCtx\");\nfunction SignInChooseSession({ children, ...props }) {\n  const activeState = useSignInChooseSessionIsActive();\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSessionCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", { ...props, children }) }) : null;\n}\nfunction SignInSessionList({ asChild, children, includeCurrentSession, ...props }) {\n  const sessions = useSignInActiveSessionList({ omitCurrent: !includeCurrentSession });\n  if (!children || !(sessions == null ? void 0 : sessions.length)) {\n    return null;\n  }\n  if (react__WEBPACK_IMPORTED_MODULE_1__.Children.count(children) > 1) {\n    return react__WEBPACK_IMPORTED_MODULE_1__.Children.only(null);\n  }\n  if (asChild && isValidComponentType(children, SignInSessionListItem)) {\n    throw new Error(\"asChild cannot be used with SessionListItem as the direct child\");\n  }\n  if (!react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(children)) {\n    throw new Error(\"children must be a valid React element\");\n  }\n  const newChildren = asChild ? children.props.children : children;\n  const childrenWithCtx = sessions.map((session) => {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      SignInActiveSessionContext.Provider,\n      {\n        value: session,\n        children: newChildren\n      },\n      `SignInActiveSessionContext-${session.id}`\n    );\n  });\n  if (asChild) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(_radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot, { ...props, children: react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(children, void 0, childrenWithCtx) });\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"ul\", { ...props, children: childrenWithCtx });\n}\nfunction SignInSessionListItem(props) {\n  const { asChild = false, children, ...passthroughProps } = props;\n  const session = useSignInActiveSessionContext();\n  const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"li\";\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(Comp, { ...passthroughProps, children: children({ session }) });\n}\n\n// src/react/sign-in/choose-strategy.tsx\n\n\n\n\n// src/internals/machines/sign-in/verification.machine.ts\n\n\n\n// src/internals/constants/index.ts\nvar SSO_CALLBACK_PATH_ROUTE = \"/sso-callback\";\nvar CHOOSE_SESSION_PATH_ROUTE = \"/choose\";\nvar MAGIC_LINK_VERIFY_PATH_ROUTE = \"/verify\";\nvar _a, _b;\nvar SIGN_IN_DEFAULT_BASE_PATH = (_b = (_a = process.env.CLERK_SIGN_IN_URL) != null ? _a : process.env.NEXT_PUBLIC_CLERK_SIGN_IN_URL) != null ? _b : \"/sign-in\";\nvar _a2, _b2;\nvar SIGN_UP_DEFAULT_BASE_PATH = (_b2 = (_a2 = process.env.CLERK_SIGN_UP_URL) != null ? _a2 : process.env.NEXT_PUBLIC_CLERK_SIGN_UP_URL) != null ? _b2 : \"/sign-up\";\nvar NEXT_WINDOW_HISTORY_SUPPORT_VERSION = \"14.1.0\";\nvar SEARCH_PARAMS = {\n  createdSession: \"__clerk_created_session\",\n  handshake: \"__clerk_handshake\",\n  help: \"__clerk_help\",\n  invitationToken: \"__clerk_invitation_token\",\n  modalState: \"__clerk_modal_state\",\n  satelliteUrl: \"__clerk_satellite_url\",\n  status: \"__clerk_status\",\n  synced: \"__clerk_synced\",\n  ticket: \"__clerk_ticket\",\n  transfer: \"__clerk_transfer\"\n};\nvar RESENDABLE_COUNTDOWN_DEFAULT = 60;\nvar CAPTCHA_ELEMENT_ID = \"clerk-captcha\";\nvar ERROR_CODES = {\n  FORM_IDENTIFIER_NOT_FOUND: \"form_identifier_not_found\",\n  FORM_PASSWORD_INCORRECT: \"form_password_incorrect\",\n  INVALID_STRATEGY_FOR_USER: \"strategy_for_user_invalid\",\n  NOT_ALLOWED_TO_SIGN_UP: \"not_allowed_to_sign_up\",\n  OAUTH_ACCESS_DENIED: \"oauth_access_denied\",\n  OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML: \"oauth_email_domain_reserved_by_saml\",\n  NOT_ALLOWED_ACCESS: \"not_allowed_access\",\n  SAML_USER_ATTRIBUTE_MISSING: \"saml_user_attribute_missing\",\n  USER_LOCKED: \"user_locked\"\n};\nvar ROUTING = {\n  path: \"path\",\n  virtual: \"virtual\"\n};\n\n// src/internals/machines/shared/shared.actions.ts\nfunction sendToLoading({ context, event }) {\n  let step;\n  let strategy;\n  let action;\n  if (event.type.startsWith(\"xstate.done.\") || event.type.startsWith(\"xstate.error.\")) {\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: false,\n      step: void 0,\n      strategy: void 0\n    });\n  }\n  if (context.loadingStep === \"strategy\") {\n    step = void 0;\n    if (event.type === \"REDIRECT\") {\n      strategy = event.params.strategy;\n    }\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy\n    });\n  } else if (context.loadingStep === \"continue\") {\n    step = \"continue\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"reset-password\") {\n    step = \"reset-password\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else if (context.loadingStep === \"start\") {\n    step = \"start\";\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  } else {\n    step = context.loadingStep;\n    strategy = void 0;\n    action = \"action\" in event ? event.action : void 0;\n    return context.parent.send({\n      type: \"LOADING\",\n      isLoading: true,\n      step,\n      strategy,\n      action\n    });\n  }\n}\n\n// src/internals/machines/sign-in/utils/starting-factors.ts\n\nvar makeSortingOrderMap = (arr) => arr.reduce(\n  (acc, k, i) => {\n    acc[k] = i;\n    return acc;\n  },\n  {}\n);\nvar STRATEGY_SORT_ORDER_PASSWORD_PREF = makeSortingOrderMap([\n  \"passkey\",\n  \"password\",\n  \"email_link\",\n  \"email_code\",\n  \"phone_code\"\n]);\nvar STRATEGY_SORT_ORDER_OTP_PREF = makeSortingOrderMap([\n  \"email_code\",\n  \"email_link\",\n  \"phone_code\",\n  \"passkey\",\n  \"password\"\n]);\nvar makeSortingFunction = (sortingMap) => (a, b) => {\n  const orderA = sortingMap[a.strategy];\n  const orderB = sortingMap[b.strategy];\n  if (orderA === void 0 || orderB === void 0) {\n    return 0;\n  }\n  return orderA - orderB;\n};\nvar passwordPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_PASSWORD_PREF);\nvar otpPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_OTP_PREF);\nvar findFactorForIdentifier = (i) => (f) => {\n  return \"safeIdentifier\" in f && f.safeIdentifier === i;\n};\nfunction determineStartingSignInFactor(firstFactors, identifier, preferredSignInStrategy) {\n  if (!firstFactors || firstFactors.length === 0) {\n    return null;\n  }\n  return preferredSignInStrategy === \"password\" ? determineStrategyWhenPasswordIsPreferred(firstFactors, identifier) : determineStrategyWhenOTPIsPreferred(firstFactors, identifier);\n}\nfunction findPasskeyStrategy(factors) {\n  if ((0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_15__.isWebAuthnSupported)()) {\n    const passkeyFactor = factors.find(({ strategy }) => strategy === \"passkey\");\n    if (passkeyFactor) {\n      return passkeyFactor;\n    }\n  }\n  return null;\n}\nfunction determineStrategyWhenPasswordIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const selected = factors.sort(passwordPrefFactorComparator)[0];\n  if (selected.strategy === \"password\") {\n    return selected;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || selected || null;\n}\nfunction determineStrategyWhenOTPIsPreferred(factors, identifier) {\n  const passkeyFactor = findPasskeyStrategy(factors);\n  if (passkeyFactor) {\n    return passkeyFactor;\n  }\n  const sortedBasedOnPrefFactor = factors.sort(otpPrefFactorComparator);\n  const forIdentifier = sortedBasedOnPrefFactor.find(findFactorForIdentifier(identifier));\n  if (forIdentifier) {\n    return forIdentifier;\n  }\n  const firstBasedOnPref = sortedBasedOnPrefFactor[0];\n  if (firstBasedOnPref.strategy === \"email_link\") {\n    return firstBasedOnPref;\n  }\n  return factors.find(findFactorForIdentifier(identifier)) || firstBasedOnPref || null;\n}\nfunction determineStartingSignInSecondFactor(secondFactors) {\n  if (!secondFactors || secondFactors.length === 0) {\n    return null;\n  }\n  const totpFactor = secondFactors.find((f) => f.strategy === \"totp\");\n  if (totpFactor) {\n    return totpFactor;\n  }\n  const phoneCodeFactor = secondFactors.find((f) => f.strategy === \"phone_code\");\n  if (phoneCodeFactor) {\n    return phoneCodeFactor;\n  }\n  return secondFactors[0];\n}\n\n// src/internals/machines/utils/assert.ts\nfunction assertIsDefined(value, label) {\n  if (value === void 0 || value === null) {\n    throw new Error(`${label || value} is not defined`);\n  }\n}\nfunction assertActorEventError(event) {\n  if (\"error\" in event === false) {\n    throw new Error(`Expected an error event, got \"${event.type}\"`);\n  }\n}\n\n// src/internals/machines/sign-in/verification.types.ts\nvar SignInVerificationDelays = {\n  resendableTimeout: 1e3\n  // 1 second\n};\n\n// src/internals/machines/sign-in/verification.machine.ts\nvar isNonPreperableStrategy = (strategy) => {\n  if (!strategy) {\n    return false;\n  }\n  return [\"passkey\", \"password\"].includes(strategy);\n};\nvar SignInVerificationMachineId = \"SignInVerification\";\nvar SignInVerificationMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `determineStartingFactor` must be overridden\"))\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `prepare` must be overridden\"))\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      () => Promise.reject(new ClerkElementsRuntimeError(\"Actor `attempt` must be overridden\"))\n    )\n  },\n  actions: {\n    resendableTick: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ context }) => ({\n      resendable: context.resendableAfter === 0,\n      resendableAfter: context.resendableAfter > 0 ? context.resendableAfter - 1 : context.resendableAfter\n    })),\n    resendableReset: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      resendable: false,\n      resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n    }),\n    validateRegisteredStrategies: ({ context }) => {\n      var _a3;\n      const clerk = context.parent.getSnapshot().context.clerk;\n      if ((_a3 = clerk.__unstable__environment) == null ? void 0 : _a3.isProduction()) {\n        return;\n      }\n      if (false) {}\n    },\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    ),\n    setConsoleError: ({ event }) => {\n      if (true) {\n        return;\n      }\n      assertActorEventError(event);\n      const error = (0,_clerk_shared_error__WEBPACK_IMPORTED_MODULE_2__.isClerkAPIResponseError)(event.error) ? event.error.errors[0].longMessage : event.error.message;\n      console.error(`Unable to fulfill the prepare or attempt request for the sign-in verification.\n      Error: ${error}\n      Please open an issue if you continue to run into this issue.`);\n    }\n  },\n  guards: {\n    isResendable: ({ context }) => context.resendable || context.resendableAfter === 0,\n    isNeverResendable: ({ context }) => {\n      var _a3;\n      return isNonPreperableStrategy((_a3 = context.currentFactor) == null ? void 0 : _a3.strategy);\n    }\n  },\n  delays: SignInVerificationDelays,\n  types: {}\n}).createMachine({\n  id: SignInVerificationMachineId,\n  context: ({ input }) => ({\n    currentFactor: null,\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    formRef: input.formRef,\n    loadingStep: \"verifications\",\n    parent: input.parent,\n    registeredStrategies: /* @__PURE__ */ new Set(),\n    resendable: false,\n    resendableAfter: RESENDABLE_COUNTDOWN_DEFAULT\n  }),\n  initial: \"Init\",\n  on: {\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"STRATEGY.REGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => context.registeredStrategies.add(event.factor)\n      })\n    },\n    \"STRATEGY.UNREGISTER\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n        registeredStrategies: ({ context, event }) => {\n          context.registeredStrategies.delete(event.factor);\n          return context.registeredStrategies;\n        }\n      })\n    }\n  },\n  states: {\n    Init: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"determineStartingFactor\",\n        src: \"determineStartingFactor\",\n        input: ({ context }) => ({\n          parent: context.parent\n        }),\n        onDone: {\n          target: \"Preparing\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n            currentFactor: ({ event }) => event.output\n          })\n        },\n        onError: {\n          target: \"Preparing\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Clerk [Sign In Verification]: Error determining starting factor\"),\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n              currentFactor: { strategy: \"password\" }\n            })\n          ]\n        }\n      }\n    },\n    Preparing: {\n      tags: [\"state:preparing\", \"state:loading\"],\n      invoke: {\n        id: \"prepare\",\n        src: \"prepare\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          resendable: context.resendable,\n          params: {\n            ...context.currentFactor,\n            redirectUrl: `${window.location.origin}${context.basePath}${MAGIC_LINK_VERIFY_PATH_ROUTE}`\n          }\n        }),\n        onDone: {\n          actions: \"resendableReset\",\n          target: \"Pending\"\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        \"NAVIGATE.CHOOSE_STRATEGY\": \"ChooseStrategy\",\n        \"NAVIGATE.FORGOT_PASSWORD\": \"ChooseStrategy\",\n        RETRY: \"Preparing\",\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      initial: \"Init\",\n      states: {\n        Init: {\n          description: \"Marks appropriate factors as never resendable.\",\n          always: [\n            {\n              guard: \"isNeverResendable\",\n              target: \"NeverResendable\"\n            },\n            {\n              target: \"NotResendable\"\n            }\n          ]\n        },\n        Resendable: {\n          description: \"Waiting for user to retry\"\n        },\n        NeverResendable: {\n          description: \"Handles never resendable\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Never retriable\")\n            }\n          }\n        },\n        NotResendable: {\n          description: \"Handle countdowns\",\n          on: {\n            RETRY: {\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ context }) => `Not retriable; Try again in ${context.resendableAfter}s`)\n            }\n          },\n          after: {\n            resendableTimeout: [\n              {\n                description: \"Set as retriable if countdown is 0\",\n                guard: \"isResendable\",\n                actions: \"resendableTick\",\n                target: \"Resendable\"\n              },\n              {\n                description: \"Continue countdown if not retriable\",\n                actions: \"resendableTick\",\n                target: \"NotResendable\",\n                reenter: true\n              }\n            ]\n          }\n        }\n      },\n      after: {\n        3e3: {\n          actions: \"validateRegisteredStrategies\"\n        }\n      }\n    },\n    ChooseStrategy: {\n      description: \"Handles both choose strategy and forgot password as the latter is similar in functionality\",\n      tags: [\"state:choose-strategy\", \"state:forgot-password\"],\n      on: {\n        \"STRATEGY.UPDATE\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ currentFactor: ({ event }) => event.factor || null }),\n          target: \"Preparing\"\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          currentFactor: context.currentFactor,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"setConsoleError\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\"\n    }\n  }\n});\nvar SignInFirstFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(async ({ input }) => {\n      var _a3;\n      const clerk = input.parent.getSnapshot().context.clerk;\n      return Promise.resolve(\n        determineStartingSignInFactor(\n          clerk.client.signIn.supportedFirstFactors,\n          clerk.client.signIn.identifier,\n          (_a3 = clerk.__unstable__environment) == null ? void 0 : _a3.displayConfig.preferredSignInStrategy\n        )\n      );\n    }),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.firstFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      if (isNonPreperableStrategy(params == null ? void 0 : params.strategy) || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      assertIsDefined(params, \"First factor params\");\n      return await clerk.client.signIn.prepareFirstFactor(params);\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(async ({ input }) => {\n      var _a3, _b3, _c, _d;\n      const { currentFactor, fields, parent } = input;\n      assertIsDefined(currentFactor, \"Current factor\");\n      let attemptParams;\n      const strategy = currentFactor.strategy;\n      const code = (_a3 = fields.get(\"code\")) == null ? void 0 : _a3.value;\n      const password = (_b3 = fields.get(\"password\")) == null ? void 0 : _b3.value;\n      switch (strategy) {\n        case \"passkey\": {\n          return await parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey();\n        }\n        case \"password\": {\n          assertIsDefined(password, \"Password\");\n          attemptParams = {\n            strategy,\n            password\n          };\n          break;\n        }\n        case \"reset_password_phone_code\":\n        case \"reset_password_email_code\": {\n          assertIsDefined(code, \"Code for resetting phone/email\");\n          attemptParams = {\n            strategy,\n            code,\n            password\n          };\n          break;\n        }\n        case \"phone_code\":\n        case \"email_code\": {\n          assertIsDefined(code, \"Code for phone/email\");\n          attemptParams = {\n            strategy,\n            code\n          };\n          break;\n        }\n        case \"web3_metamask_signature\": {\n          const signature = (_c = fields.get(\"signature\")) == null ? void 0 : _c.value;\n          assertIsDefined(signature, \"Web3 Metamask signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        case \"web3_coinbase_signature\": {\n          const signature = (_d = fields.get(\"signature\")) == null ? void 0 : _d.value;\n          assertIsDefined(signature, \"Web3 Coinbase signature\");\n          attemptParams = {\n            strategy,\n            signature\n          };\n          break;\n        }\n        default:\n          throw new ClerkElementsRuntimeError(`Invalid strategy: ${strategy}`);\n      }\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptFirstFactor(attemptParams);\n    })\n  }\n});\nvar SignInSecondFactorMachine = SignInVerificationMachine.provide({\n  actors: {\n    determineStartingFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      async ({ input }) => Promise.resolve(\n        determineStartingSignInSecondFactor(\n          input.parent.getSnapshot().context.clerk.client.signIn.supportedSecondFactors\n        )\n      )\n    ),\n    prepare: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(async ({ input }) => {\n      const { params, parent, resendable } = input;\n      const clerk = parent.getSnapshot().context.clerk;\n      const currentVerificationExpiration = clerk.client.signIn.secondFactorVerification.expireAt;\n      const needsPrepare = resendable || !currentVerificationExpiration || currentVerificationExpiration < /* @__PURE__ */ new Date();\n      assertIsDefined(params, \"Second factor params\");\n      if (params.strategy !== \"phone_code\" || !needsPrepare) {\n        return Promise.resolve(clerk.client.signIn);\n      }\n      return await clerk.client.signIn.prepareSecondFactor({\n        strategy: params.strategy,\n        phoneNumberId: params.phoneNumberId\n      });\n    }),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(async ({ input }) => {\n      var _a3;\n      const { fields, parent, currentFactor } = input;\n      const code = (_a3 = fields.get(\"code\")) == null ? void 0 : _a3.value;\n      assertIsDefined(currentFactor, \"Current factor\");\n      assertIsDefined(code, \"Code\");\n      return await parent.getSnapshot().context.clerk.client.signIn.attemptSecondFactor({\n        strategy: currentFactor.strategy,\n        code\n      });\n    })\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\n\n\n\n\n// src/internals/machines/third-party/third-party.actors.ts\n\n\n// src/internals/machines/utils/clerkjs.ts\nfunction isClerkJSEvent(eventObj, event) {\n  return Object.values(eventObj).includes(event);\n}\nvar ClerkJSNavigationEvent = {\n  complete: \"CLERKJS.NAVIGATE.COMPLETE\",\n  signUp: \"CLERKJS.NAVIGATE.SIGN_UP\",\n  continue: \"CLERKJS.NAVIGATE.CONTINUE\",\n  generic: \"CLERKJS.NAVIGATE.GENERIC\",\n  resetPassword: \"CLERKJS.NAVIGATE.RESET_PASSWORD\",\n  signIn: \"CLERKJS.NAVIGATE.SIGN_IN\",\n  verification: \"CLERKJS.NAVIGATE.VERIFICATION\"\n};\nfunction isClerkJSNavigationEvent(event) {\n  return isClerkJSEvent(ClerkJSNavigationEvent, event);\n}\n\n// src/internals/machines/third-party/third-party.actors.ts\nvar redirect = (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n  async ({ input: { flow, params, parent } }) => {\n    const clerk = parent.getSnapshot().context.clerk;\n    return clerk.client[flow].authenticateWithRedirect({\n      redirectUrl: clerk.buildUrlWithAuth(params.redirectUrl || \"/\"),\n      redirectUrlComplete: clerk.buildUrlWithAuth(params.redirectUrlComplete || \"/\"),\n      ...params\n    });\n  }\n);\nvar handleRedirectCallback = (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromCallback)(\n  ({ sendBack, input: parent }) => {\n    var _a3;\n    const clerk = parent.getSnapshot().context.clerk;\n    const displayConfig = (_a3 = clerk.__unstable__environment) == null ? void 0 : _a3.displayConfig;\n    const customNavigate = (toEvt) => {\n      const to = toEvt.split(\"/\").slice(-1)[0];\n      if (isClerkJSNavigationEvent(to)) {\n        sendBack({ type: to });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signInUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signIn });\n      } else if (to === (displayConfig == null ? void 0 : displayConfig.signUpUrl)) {\n        sendBack({ type: ClerkJSNavigationEvent.signUp });\n      } else {\n        sendBack({ type: \"FAILURE\", error: new ClerkElementsRuntimeError(`Unknown navigation event: ${to}`) });\n      }\n      return Promise.resolve();\n    };\n    const loadedClerk = clerk.clerkjs;\n    void loadedClerk.handleRedirectCallback(\n      {\n        signInForceRedirectUrl: ClerkJSNavigationEvent.complete,\n        signInFallbackRedirectUrl: ClerkJSNavigationEvent.complete,\n        signUpForceRedirectUrl: ClerkJSNavigationEvent.signUp,\n        signUpFallbackRedirectUrl: ClerkJSNavigationEvent.signUp,\n        continueSignUpUrl: ClerkJSNavigationEvent.continue,\n        firstFactorUrl: ClerkJSNavigationEvent.signIn,\n        resetPasswordUrl: ClerkJSNavigationEvent.resetPassword,\n        secondFactorUrl: ClerkJSNavigationEvent.signIn,\n        verifyEmailAddressUrl: ClerkJSNavigationEvent.verification,\n        verifyPhoneNumberUrl: ClerkJSNavigationEvent.verification,\n        signUpUrl: ClerkJSNavigationEvent.signUp,\n        signInUrl: ClerkJSNavigationEvent.signIn\n      },\n      customNavigate\n    );\n    return () => void 0;\n  }\n);\n\n// src/internals/machines/third-party/third-party.machine.ts\n\nvar ThirdPartyMachineId = \"ThirdParty\";\nvar ThirdPartyMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    handleRedirectCallback,\n    redirect\n  },\n  actions: {\n    logError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(({ event }) => `Error: ${event.type}`),\n    assignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: ({ event }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n        return event.params.strategy;\n      }\n    }),\n    unassignActiveStrategy: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      activeStrategy: null\n    }),\n    sendToNext: ({ context }) => context.parent.send({ type: \"NEXT\" }),\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: ThirdPartyMachineId,\n  context: ({ input }) => ({\n    activeStrategy: null,\n    basePath: input.basePath,\n    formRef: input.formRef,\n    flow: input.flow,\n    parent: input.parent,\n    loadingStep: \"strategy\"\n  }),\n  initial: \"Idle\",\n  states: {\n    Idle: {\n      description: \"Sets third-party providers if not already set, and waits for a redirect or callback event\",\n      on: {\n        CALLBACK: \"HandlingCallback\",\n        REDIRECT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"Redirecting\",\n          reenter: true\n        }\n      }\n    },\n    Redirecting: {\n      description: \"Redirects to the third-party provider for authentication\",\n      tags: [\"state:redirect\", \"state:loading\"],\n      entry: [\"assignActiveStrategy\", \"sendToLoading\"],\n      exit: [\"unassignActiveStrategy\", \"sendToLoading\"],\n      invoke: {\n        id: \"redirect\",\n        src: \"redirect\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"REDIRECT\");\n          return {\n            basePath: context.basePath,\n            flow: context.flow,\n            params: event.params,\n            parent: context.parent\n          };\n        },\n        onError: {\n          actions: \"setFormErrors\",\n          target: \"Idle\"\n        }\n      }\n    },\n    HandlingCallback: {\n      description: \"Handles the callback from the third-party provider\",\n      tags: [\"state:callback\", \"state:loading\"],\n      invoke: {\n        id: \"handleRedirectCallback\",\n        src: \"handleRedirectCallback\",\n        input: ({ context }) => context.parent,\n        onError: {\n          actions: [\"logError\", \"setFormErrors\"],\n          target: \"Idle\"\n        }\n      },\n      on: {\n        \"CLERKJS.NAVIGATE.*\": {\n          actions: \"sendToNext\",\n          target: \"Idle\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/utils/next.ts\nfunction shouldUseVirtualRouting() {\n  if (typeof window === \"undefined\") {\n    return false;\n  }\n  if (!window.next) {\n    return false;\n  }\n  return window.next.version < NEXT_WINDOW_HISTORY_SUPPORT_VERSION;\n}\n\n// src/internals/machines/sign-in/reset-password.machine.ts\n\nvar SignInResetPasswordMachineId = \"SignInResetPasswordMachine\";\nvar SignInResetPasswordMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        var _a3, _b3;\n        const password = ((_a3 = fields.get(\"password\")) == null ? void 0 : _a3.value) || \"\";\n        const signOutOfOtherSessions = ((_b3 = fields.get(\"signOutOfOtherSessions\")) == null ? void 0 : _b3.checked) || false;\n        return parent.getSnapshot().context.clerk.client.signIn.resetPassword({ password, signOutOfOtherSessions });\n      }\n    )\n  },\n  actions: {\n    sendToLoading,\n    sendToNext: ({ context, event }) => context.parent.send({ type: \"NEXT\", resource: event.output }),\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  types: {}\n}).createMachine({\n  id: SignInResetPasswordMachineId,\n  context: ({ input }) => ({\n    loadingStep: \"reset-password\",\n    parent: input.parent,\n    formRef: input.formRef\n  }),\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          target: \"Attempting\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/start.machine.ts\n\nvar SignInStartMachineId = \"SignInStart\";\nvar SignInStartMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    attemptPasskey: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(({ input: { parent, flow } }) => {\n      return parent.getSnapshot().context.clerk.client.signIn.authenticateWithPasskey({\n        flow\n      });\n    }),\n    attemptWeb3: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      ({ input: { parent, strategy } }) => {\n        if (strategy === \"web3_metamask_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithMetamask();\n        }\n        if (strategy === \"web3_coinbase_signature\") {\n          return parent.getSnapshot().context.clerk.client.signIn.authenticateWithCoinbase();\n        }\n        throw new ClerkElementsRuntimeError(`Unsupported Web3 strategy: ${strategy}`);\n      }\n    ),\n    attempt: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(\n      ({ input: { fields, parent } }) => {\n        const clerk = parent.getSnapshot().context.clerk;\n        const password = fields.get(\"password\");\n        const identifier = fields.get(\"identifier\");\n        const passwordParams = (password == null ? void 0 : password.value) ? {\n          password: password.value,\n          strategy: \"password\"\n        } : {};\n        return clerk.client.signIn.create({\n          identifier: (identifier == null ? void 0 : identifier.value) || \"\",\n          ...passwordParams\n        });\n      }\n    )\n  },\n  actions: {\n    sendToNext: ({ context, event }) => {\n      return context.parent.send({ type: \"NEXT\", resource: event == null ? void 0 : event.output });\n    },\n    sendToLoading,\n    setFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\n      ({ context }) => context.formRef,\n      ({ event }) => {\n        assertActorEventError(event);\n        return {\n          type: \"ERRORS.SET\",\n          error: event.error\n        };\n      }\n    )\n  },\n  guards: {\n    isExampleMode: ({ context }) => Boolean(context.parent.getSnapshot().context.exampleMode)\n  },\n  types: {}\n}).createMachine({\n  id: SignInStartMachineId,\n  context: ({ input }) => ({\n    basePath: input.basePath || SIGN_IN_DEFAULT_BASE_PATH,\n    parent: input.parent,\n    formRef: input.formRef,\n    loadingStep: \"start\"\n  }),\n  initial: \"Pending\",\n  states: {\n    Pending: {\n      tags: [\"state:pending\"],\n      description: \"Waiting for user input\",\n      on: {\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskeyAutoFill\",\n          reenter: false\n        },\n        \"AUTHENTICATE.WEB3\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"AttemptingWeb3\",\n          reenter: true\n        }\n      }\n    },\n    Attempting: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attempt\",\n        src: \"attempt\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          fields: context.formRef.getSnapshot().context.fields\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskey: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptPasskey\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"discoverable\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingPasskeyAutoFill: {\n      on: {\n        \"AUTHENTICATE.PASSKEY\": {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"AttemptingPasskey\",\n          reenter: true\n        },\n        SUBMIT: {\n          guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\"),\n          target: \"Attempting\",\n          reenter: true\n        }\n      },\n      invoke: {\n        id: \"attemptPasskeyAutofill\",\n        src: \"attemptPasskey\",\n        input: ({ context }) => ({\n          parent: context.parent,\n          flow: \"autofill\"\n        }),\n        onDone: {\n          actions: [\"sendToNext\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\"],\n          target: \"Pending\"\n        }\n      }\n    },\n    AttemptingWeb3: {\n      tags: [\"state:attempting\", \"state:loading\"],\n      entry: \"sendToLoading\",\n      invoke: {\n        id: \"attemptWeb3\",\n        src: \"attemptWeb3\",\n        input: ({ context, event }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"AUTHENTICATE.WEB3\");\n          return {\n            parent: context.parent,\n            strategy: event.strategy\n          };\n        },\n        onDone: {\n          actions: [\"sendToNext\", \"sendToLoading\"]\n        },\n        onError: {\n          actions: [\"setFormErrors\", \"sendToLoading\"],\n          target: \"Pending\"\n        }\n      }\n    }\n  }\n});\n\n// src/internals/machines/sign-in/router.machine.ts\nvar isCurrentPath = (path) => ({ context }, _params) => {\n  var _a3, _b3;\n  return (_b3 = (_a3 = context.router) == null ? void 0 : _a3.match(path)) != null ? _b3 : false;\n};\nvar needsStatus = (status) => ({ context, event }, _) => {\n  var _a3, _b3;\n  return ((_a3 = event == null ? void 0 : event.resource) == null ? void 0 : _a3.status) === status || ((_b3 = context.clerk) == null ? void 0 : _b3.client.signIn.status) === status;\n};\nvar SignInRouterMachineId = \"SignInRouter\";\nvar SignInRouterMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  actors: {\n    firstFactorMachine: SignInFirstFactorMachine,\n    formMachine: FormMachine,\n    resetPasswordMachine: SignInResetPasswordMachine,\n    startMachine: SignInStartMachine,\n    secondFactorMachine: SignInSecondFactorMachine,\n    thirdPartyMachine: ThirdPartyMachine,\n    webAuthnAutofillSupport: (0,xstate__WEBPACK_IMPORTED_MODULE_16__.fromPromise)(() => (0,_clerk_shared_webauthn__WEBPACK_IMPORTED_MODULE_15__.isWebAuthnAutofillSupported)())\n  },\n  actions: {\n    clearFormErrors: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(({ context }) => context.formRef, { type: \"ERRORS.CLEAR\" }),\n    navigateInternal: ({ context }, { path, force = false }) => {\n      if (!context.router) {\n        return;\n      }\n      if (!force && shouldUseVirtualRouting()) {\n        return;\n      }\n      if (context.exampleMode) {\n        return;\n      }\n      const resolvedPath = (0,_clerk_shared_url__WEBPACK_IMPORTED_MODULE_17__.joinURL)(context.router.basePath, path);\n      if (resolvedPath === context.router.pathname()) {\n        return;\n      }\n      context.router.shallowPush(resolvedPath);\n    },\n    navigateExternal: ({ context }, { path }) => {\n      var _a3;\n      return (_a3 = context.router) == null ? void 0 : _a3.push(path);\n    },\n    raiseNext: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.O)({ type: \"NEXT\" }),\n    setActive: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, check, context, event }) => {\n      if (check(\"isExampleMode\")) {\n        return;\n      }\n      const id = event == null ? void 0 : event.id;\n      const lastActiveSessionId = context.clerk.client.lastActiveSessionId;\n      const createdSessionId = ((event == null ? void 0 : event.resource) || context.clerk.client.signIn).createdSessionId;\n      const session = id || createdSessionId || lastActiveSessionId || null;\n      const beforeEmit = () => {\n        var _a3, _b3;\n        return (_b3 = context.router) == null ? void 0 : _b3.push(((_a3 = context.router) == null ? void 0 : _a3.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl());\n      };\n      void context.clerk.setActive({ session, beforeEmit });\n      enqueue.raise({ type: \"RESET\" }, { delay: 2e3 });\n    }),\n    setError: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      error: (_, { error }) => {\n        if (error) {\n          return error;\n        }\n        return new ClerkElementsRuntimeError(\"Unknown error\");\n      }\n    }),\n    setFormErrors: ({ context }, params) => (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(context.formRef, {\n      type: \"ERRORS.SET\",\n      error: params.error\n    }),\n    setFormOAuthErrors: ({ context }) => {\n      const errorOrig = context.clerk.client.signIn.firstFactorVerification.error;\n      if (!errorOrig) {\n        return;\n      }\n      let error;\n      switch (errorOrig.code) {\n        case ERROR_CODES.NOT_ALLOWED_TO_SIGN_UP:\n        case ERROR_CODES.OAUTH_ACCESS_DENIED:\n        case ERROR_CODES.NOT_ALLOWED_ACCESS:\n        case ERROR_CODES.SAML_USER_ATTRIBUTE_MISSING:\n        case ERROR_CODES.OAUTH_EMAIL_DOMAIN_RESERVED_BY_SAML:\n        case ERROR_CODES.USER_LOCKED:\n          error = new ClerkElementsError(errorOrig.code, errorOrig.longMessage || \"\");\n          break;\n        default:\n          error = new ClerkElementsError(\n            \"unable_to_complete\",\n            \"Unable to complete action at this time. If the problem persists please contact support.\"\n          );\n      }\n      context.formRef.send({\n        type: \"ERRORS.SET\",\n        error\n      });\n    },\n    transfer: ({ context }) => {\n      var _a3;\n      const searchParams = new URLSearchParams({ __clerk_transfer: \"1\" });\n      (_a3 = context.router) == null ? void 0 : _a3.push(`${context.signUpPath}?${searchParams}`);\n    }\n  },\n  guards: {\n    hasAuthenticatedViaClerkJS: ({ context }) => Boolean(context.clerk.client.signIn.status === null && context.clerk.client.lastActiveSessionId),\n    hasOAuthError: ({ context }) => {\n      var _a3, _b3, _c, _d;\n      return Boolean((_d = (_c = (_b3 = (_a3 = context.clerk) == null ? void 0 : _a3.client) == null ? void 0 : _b3.signIn) == null ? void 0 : _c.firstFactorVerification) == null ? void 0 : _d.error);\n    },\n    hasResource: ({ context }) => {\n      var _a3, _b3, _c;\n      return Boolean((_c = (_b3 = (_a3 = context.clerk) == null ? void 0 : _a3.client) == null ? void 0 : _b3.signIn) == null ? void 0 : _c.status);\n    },\n    isLoggedInAndSingleSession: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.D)([\"isLoggedIn\", \"isSingleSessionMode\", (0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"isExampleMode\")]),\n    isActivePathRoot: isCurrentPath(\"/\"),\n    isComplete: ({ context, event }) => {\n      const resource = event == null ? void 0 : event.resource;\n      const signIn = context.clerk.client.signIn;\n      return (resource == null ? void 0 : resource.status) === \"complete\" && Boolean(resource == null ? void 0 : resource.createdSessionId) || signIn.status === \"complete\" && Boolean(signIn.createdSessionId);\n    },\n    isLoggedIn: ({ context }) => {\n      var _a3;\n      return Boolean((_a3 = context.clerk) == null ? void 0 : _a3.user);\n    },\n    isSingleSessionMode: ({ context }) => {\n      var _a3, _b3;\n      return Boolean((_b3 = (_a3 = context.clerk) == null ? void 0 : _a3.__unstable__environment) == null ? void 0 : _b3.authConfig.singleSessionMode);\n    },\n    isExampleMode: ({ context }) => Boolean(context.exampleMode),\n    needsStart: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.F)([(0,xstate__WEBPACK_IMPORTED_MODULE_18__.E)(\"hasResource\"), \"statusNeedsIdentifier\", isCurrentPath(\"/\")]),\n    needsFirstFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.D)([\"statusNeedsFirstFactor\", isCurrentPath(\"/continue\")]),\n    needsSecondFactor: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.D)([\"statusNeedsSecondFactor\", isCurrentPath(\"/continue\")]),\n    needsCallback: isCurrentPath(SSO_CALLBACK_PATH_ROUTE),\n    needsChooseSession: isCurrentPath(CHOOSE_SESSION_PATH_ROUTE),\n    needsNewPassword: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.D)([\"statusNeedsNewPassword\", isCurrentPath(\"/new-password\")]),\n    statusNeedsIdentifier: needsStatus(\"needs_identifier\"),\n    statusNeedsFirstFactor: needsStatus(\"needs_first_factor\"),\n    statusNeedsSecondFactor: needsStatus(\"needs_second_factor\"),\n    statusNeedsNewPassword: needsStatus(\"needs_new_password\")\n  },\n  types: {}\n}).createMachine({\n  id: SignInRouterMachineId,\n  // @ts-expect-error - Set in INIT event\n  context: {},\n  initial: \"Idle\",\n  on: {\n    \"AUTHENTICATE.OAUTH\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context, event }) => {\n        var _a3, _b3, _c, _d;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: event.strategy,\n            redirectUrl: `${((_a3 = context.router) == null ? void 0 : _a3.mode) === ROUTING.virtual ? (_b3 = context.clerk.__unstable__environment) == null ? void 0 : _b3.displayConfig.signInUrl : (_c = context.router) == null ? void 0 : _c.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: ((_d = context.router) == null ? void 0 : _d.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n          }\n        };\n      })\n    },\n    \"AUTHENTICATE.SAML\": {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, ({ context }) => {\n        var _a3, _b3, _c, _d, _e;\n        return {\n          type: \"REDIRECT\",\n          params: {\n            strategy: \"saml\",\n            identifier: (_a3 = context.formRef.getSnapshot().context.fields.get(\"identifier\")) == null ? void 0 : _a3.value,\n            redirectUrl: `${((_b3 = context.router) == null ? void 0 : _b3.mode) === ROUTING.virtual ? (_c = context.clerk.__unstable__environment) == null ? void 0 : _c.displayConfig.signInUrl : (_d = context.router) == null ? void 0 : _d.basePath}${SSO_CALLBACK_PATH_ROUTE}`,\n            redirectUrlComplete: ((_e = context.router) == null ? void 0 : _e.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n          }\n        };\n      })\n    },\n    \"FORM.ATTACH\": {\n      description: \"Attach/re-attach the form to the router.\",\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue, event }) => {\n        enqueue.assign({\n          formRef: event.formRef\n        });\n        enqueue.raise({ type: \"RESET.STEP\" });\n      })\n    },\n    \"NAVIGATE.PREVIOUS\": \".Hist\",\n    \"NAVIGATE.START\": \".Start\",\n    LOADING: {\n      actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => ({\n        loading: {\n          isLoading: event.isLoading,\n          step: event.step,\n          strategy: event.strategy,\n          action: event.action\n        }\n      }))\n    },\n    RESET: \".Idle\"\n  },\n  states: {\n    Idle: {\n      invoke: {\n        id: \"webAuthnAutofill\",\n        src: \"webAuthnAutofillSupport\",\n        onDone: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ webAuthnAutofillSupport: ({ event }) => event.output })\n        }\n      },\n      on: {\n        INIT: {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event }) => ({\n            clerk: event.clerk,\n            exampleMode: event.exampleMode || false,\n            formRef: event.formRef,\n            loading: {\n              isLoading: false\n            },\n            router: event.router,\n            signUpPath: event.signUpPath || SIGN_UP_DEFAULT_BASE_PATH\n          })),\n          target: \"Init\"\n        }\n      }\n    },\n    Init: {\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ context, enqueue, self }) => {\n        var _a3, _b3;\n        if (!self.getSnapshot().children[ThirdPartyMachineId]) {\n          enqueue.spawnChild(\"thirdPartyMachine\", {\n            id: ThirdPartyMachineId,\n            systemId: ThirdPartyMachineId,\n            input: {\n              basePath: (_b3 = (_a3 = context.router) == null ? void 0 : _a3.basePath) != null ? _b3 : SIGN_IN_DEFAULT_BASE_PATH,\n              flow: \"signIn\",\n              formRef: context.formRef,\n              parent: self\n            }\n          });\n        }\n      }),\n      always: [\n        {\n          guard: \"needsCallback\",\n          target: \"Callback\"\n        },\n        {\n          guard: \"needsChooseSession\",\n          target: \"ChooseSession\"\n        },\n        {\n          guard: \"isComplete\",\n          actions: \"setActive\"\n        },\n        {\n          guard: \"isLoggedInAndSingleSession\",\n          actions: [\n            (0,xstate__WEBPACK_IMPORTED_MODULE_5__.l)(\"Already logged in\"),\n            {\n              type: \"navigateExternal\",\n              params: ({ context }) => {\n                var _a3;\n                return {\n                  path: ((_a3 = context.router) == null ? void 0 : _a3.searchParams().get(\"redirect_url\")) || context.clerk.buildAfterSignInUrl()\n                };\n              }\n            }\n          ]\n        },\n        {\n          guard: \"needsStart\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        },\n        {\n          guard: \"needsFirstFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"FirstFactor\"\n        },\n        {\n          guard: \"needsSecondFactor\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/continue\" } },\n          target: \"SecondFactor\"\n        },\n        {\n          guard: \"needsNewPassword\",\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/reset-password\" } },\n          target: \"ResetPassword\"\n        },\n        {\n          actions: { type: \"navigateInternal\", params: { force: true, path: \"/\" } },\n          target: \"Start\"\n        }\n      ]\n    },\n    Start: {\n      tags: [\"step:start\"],\n      exit: \"clearFormErrors\",\n      invoke: {\n        id: \"start\",\n        src: \"startMachine\",\n        input: ({ context, self }) => {\n          var _a3;\n          return {\n            basePath: (_a3 = context.router) == null ? void 0 : _a3.basePath,\n            formRef: context.formRef,\n            parent: self\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"Start\",\n          reenter: true\n        },\n        \"AUTHENTICATE.PASSKEY\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.PASSKEY.AUTOFILL\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        \"AUTHENTICATE.WEB3\": {\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"start\", ({ event }) => event)\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    FirstFactor: {\n      tags: [\"step:first-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"firstFactor\",\n        src: \"firstFactorMachine\",\n        input: ({ context, self }) => {\n          var _a3;\n          return {\n            formRef: context.formRef,\n            parent: self,\n            basePath: (_a3 = context.router) == null ? void 0 : _a3.basePath\n          };\n        },\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"FirstFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.FORGOT_PASSWORD\": {\n              description: \"Navigate to forgot password screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ForgotPassword\"\n            },\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"firstFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        },\n        ForgotPassword: {\n          tags: [\"step:forgot-password\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": \"Idle\"\n          }\n        }\n      }\n    },\n    SecondFactor: {\n      tags: [\"step:second-factor\", \"step:verifications\"],\n      invoke: {\n        id: \"secondFactor\",\n        src: \"secondFactorMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"SecondFactor\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ],\n        \"STRATEGY.UPDATE\": {\n          description: \"Send event to verification machine to update the current strategy.\",\n          actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n          target: \".Idle\"\n        }\n      },\n      initial: \"Idle\",\n      states: {\n        Idle: {\n          on: {\n            \"NAVIGATE.CHOOSE_STRATEGY\": {\n              description: \"Navigate to choose strategy screen.\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", ({ event }) => event),\n              target: \"ChoosingStrategy\"\n            }\n          }\n        },\n        ChoosingStrategy: {\n          tags: [\"step:choose-strategy\"],\n          on: {\n            \"NAVIGATE.PREVIOUS\": {\n              description: \"Go to Idle, and also tell firstFactor to go to Pending\",\n              target: \"Idle\",\n              actions: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(\"secondFactor\", { type: \"NAVIGATE.PREVIOUS\" })\n            }\n          }\n        }\n      }\n    },\n    ResetPassword: {\n      tags: [\"step:reset-password\"],\n      invoke: {\n        id: \"resetPassword\",\n        src: \"resetPasswordMachine\",\n        input: ({ context, self }) => ({\n          formRef: context.formRef,\n          parent: self\n        }),\n        onDone: {\n          actions: \"raiseNext\"\n        }\n      },\n      on: {\n        \"RESET.STEP\": {\n          target: \"ResetPassword\",\n          reenter: true\n        },\n        NEXT: [\n          {\n            guard: \"isComplete\",\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          }\n        ]\n      }\n    },\n    Callback: {\n      tags: [\"step:callback\"],\n      entry: (0,xstate__WEBPACK_IMPORTED_MODULE_5__.c)(ThirdPartyMachineId, { type: \"CALLBACK\" }),\n      on: {\n        NEXT: [\n          {\n            guard: \"hasOAuthError\",\n            actions: [\"setFormOAuthErrors\", { type: \"navigateInternal\", params: { force: true, path: \"/\" } }],\n            target: \"Start\"\n          },\n          {\n            guard: (0,xstate__WEBPACK_IMPORTED_MODULE_18__.F)([\"isLoggedIn\", \"isComplete\", \"hasAuthenticatedViaClerkJS\"]),\n            actions: \"setActive\"\n          },\n          {\n            guard: \"statusNeedsIdentifier\",\n            actions: \"transfer\"\n          },\n          {\n            guard: \"statusNeedsFirstFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"FirstFactor\"\n          },\n          {\n            guard: \"statusNeedsSecondFactor\",\n            actions: { type: \"navigateInternal\", params: { path: \"/continue\" } },\n            target: \"SecondFactor\"\n          },\n          {\n            guard: \"statusNeedsNewPassword\",\n            actions: { type: \"navigateInternal\", params: { path: \"/reset-password\" } },\n            target: \"ResetPassword\"\n          }\n        ]\n      }\n    },\n    ChooseSession: {\n      tags: [\"step:choose-session\"],\n      on: {\n        \"SESSION.SET_ACTIVE\": {\n          actions: {\n            type: \"setActive\",\n            params: ({ event }) => ({ id: event.id })\n          }\n        }\n      }\n    },\n    Error: {\n      tags: [\"step:error\"],\n      on: {\n        NEXT: {\n          target: \"Start\",\n          actions: \"clearFormErrors\"\n        }\n      }\n    },\n    Hist: {\n      type: \"history\",\n      exit: \"clearFormErrors\"\n    }\n  }\n});\n\n// src/internals/machines/utils/formatters.ts\n\nfunction formatName(...args) {\n  switch (args.length) {\n    case 0:\n      return void 0;\n    case 1:\n      return (0,_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize)(args[0]);\n    default:\n      return args.filter(Boolean).map(_clerk_shared_underscore__WEBPACK_IMPORTED_MODULE_3__.titleize).join(\" \");\n  }\n}\nfunction formatSalutation({\n  firstName,\n  lastName,\n  identifier\n}) {\n  return firstName && formatName(firstName) || lastName && formatName(lastName) || identifier || \"\";\n}\n\n// src/internals/machines/sign-in/router.selectors.ts\nfunction SignInSafeIdentifierSelectorForStrategy(strategy) {\n  return (s) => {\n    var _a3, _b3, _c;\n    const signIn = (_a3 = s.context.clerk) == null ? void 0 : _a3.client.signIn;\n    if (strategy) {\n      const matchingFactors = [\n        ...(_b3 = signIn.supportedFirstFactors) != null ? _b3 : [],\n        ...(_c = signIn.supportedSecondFactors) != null ? _c : []\n      ].filter((f) => f.strategy === strategy);\n      const matchingFactorForIdentifier = signIn.identifier && matchingFactors.length > 0 ? matchingFactors.find((f) => \"safeIdentifier\" in f && f.safeIdentifier === signIn.identifier) : null;\n      const matchingFactorForStrategy = matchingFactors[0];\n      if (matchingFactorForIdentifier && \"safeIdentifier\" in matchingFactorForIdentifier) {\n        return matchingFactorForIdentifier.safeIdentifier;\n      }\n      if (matchingFactorForStrategy && \"safeIdentifier\" in matchingFactorForStrategy) {\n        return matchingFactorForStrategy.safeIdentifier;\n      }\n    }\n    return signIn.identifier || \"\";\n  };\n}\nfunction SignInSalutationSelector(s) {\n  var _a3, _b3, _c;\n  const signIn = (_a3 = s.context.clerk) == null ? void 0 : _a3.client.signIn;\n  return formatSalutation({\n    firstName: (_b3 = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _b3.firstName,\n    identifier: signIn == null ? void 0 : signIn.identifier,\n    lastName: (_c = signIn == null ? void 0 : signIn.userData) == null ? void 0 : _c.lastName\n  });\n}\n\n// src/internals/machines/sign-in/router.types.ts\nvar SignInRouterSystemId = {\n  start: \"start\",\n  firstFactor: \"firstFactor\",\n  secondFactor: \"secondFactor\",\n  resetPassword: \"resetPassword\"\n};\n\n// src/react/sign-in/choose-strategy.tsx\n\nvar SignInChooseStrategyCtx = createContextForDomValidation(\"SignInChooseStrategyCtx\");\nfunction SignInChooseStrategy({ children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeStateFirstFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeStateSecondFactor = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:second-factor\", \"step:choose-strategy\"],\n    ActiveTagsMode.all\n  );\n  const activeState = activeStateFirstFactor || activeStateSecondFactor;\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", { ...props, children }) }) : null;\n}\nfunction SignInForgotPassword({ children, ...props }) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(\n    routerRef,\n    [\"step:verifications\", \"step:first-factor\", \"step:forgot-password\"],\n    ActiveTagsMode.all\n  );\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategyCtx.Provider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\"div\", { ...props, children }) }) : null;\n}\nvar SUPPORTED_STRATEGY_NAME = \"SignInSupportedStrategy\";\nvar SignInSupportedStrategy = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(\n  ({ asChild, children, name, ...rest }, forwardedRef) => {\n    const routerRef = SignInRouterCtx.useActorRef();\n    const snapshot = routerRef.getSnapshot();\n    const status = snapshot.context.clerk.client.signIn.status;\n    const supportedFirstFactors = status === \"needs_first_factor\" ? snapshot.context.clerk.client.signIn.supportedFirstFactors || [] : [];\n    const supportedSecondFactors = status === \"needs_second_factor\" ? snapshot.context.clerk.client.signIn.supportedSecondFactors || [] : [];\n    const factor = [...supportedFirstFactors, ...supportedSecondFactors].find((factor2) => name === factor2.strategy);\n    const currentFactor = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(\n      snapshot.children[SignInRouterSystemId.firstFactor] || snapshot.children[SignInRouterSystemId.secondFactor],\n      (state) => {\n        var _a3;\n        return (_a3 = state == null ? void 0 : state.context.currentFactor) == null ? void 0 : _a3.strategy;\n      }\n    );\n    const sendUpdateStrategyEvent = react__WEBPACK_IMPORTED_MODULE_1__.useCallback(\n      () => routerRef.send({ type: \"STRATEGY.UPDATE\", factor }),\n      [routerRef, factor]\n    );\n    if (currentFactor === name) {\n      return null;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_11__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return factor ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        ref: forwardedRef,\n        onClick: sendUpdateStrategyEvent,\n        children: children || factor.strategy\n      }\n    ) }) : null;\n  }\n);\nSignInSupportedStrategy.displayName = SUPPORTED_STRATEGY_NAME;\n\n// src/react/sign-in/reset-password.tsx\n\nvar SignInResetPasswordCtx = createContextFromActorRef(\"SignInResetPasswordCtx\");\nfunction SignInResetPassword(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:reset-password\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordInner, { ...props }) : null;\n}\nfunction SignInResetPasswordInner(props) {\n  const ref = useSignInResetPasswordStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPasswordCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/start.tsx\n\nvar SignInStartCtx = createContextFromActorRef(\"SignInStartCtx\");\nfunction SignInStart(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartInner, { ...props }) : null;\n}\nfunction SignInStartInner(props) {\n  const ref = useSignInStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-in/verifications.tsx\n\n\n\n// src/internals/machines/utils/strategies.ts\nvar matchStrategy = (current, desired) => {\n  if (!current || !desired) {\n    return false;\n  }\n  if (current === desired) {\n    return true;\n  }\n  return current.startsWith(`${desired}_`);\n};\n\n// src/react/sign-in/verifications.tsx\n\nvar SignInFirstFactorCtx = createContextFromActorRef(\"SignInFirstFactorCtx\");\nvar SignInSecondFactorCtx = createContextFromActorRef(\"SignInSecondFactorCtx\");\nvar strategiesSelector = (state) => {\n  var _a3;\n  return (_a3 = state.context.currentFactor) == null ? void 0 : _a3.strategy;\n};\nfunction SignInStrategiesProvider({\n  children,\n  preferred,\n  actorRef,\n  ...props\n}) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const current = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(actorRef, strategiesSelector);\n  const isChoosingAltStrategy = useActiveTags(routerRef, [\"step:choose-strategy\", \"step:forgot-password\"]);\n  const isActive = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((name) => current ? matchStrategy(current, name) : false, [current]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(StrategiesContext.Provider, { value: { current, preferred, isActive }, children: isChoosingAltStrategy.active ? null : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: actorRef,\n      ...props,\n      children\n    }\n  ) });\n}\nfunction useFactorCtx() {\n  const firstFactorRef = SignInFirstFactorCtx.useActorRef(true);\n  const secondFactorRef = SignInSecondFactorCtx.useActorRef(true);\n  return firstFactorRef || secondFactorRef;\n}\nfunction SignInStrategy({ children, name }) {\n  const { active } = useStrategy(name);\n  const factorCtx = useFactorCtx();\n  (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n    if (factorCtx) {\n      factorCtx.send({ type: \"STRATEGY.REGISTER\", factor: name });\n    }\n    return () => {\n      if ((factorCtx == null ? void 0 : factorCtx.getSnapshot().status) === \"active\") {\n        factorCtx.send({ type: \"STRATEGY.UNREGISTER\", factor: name });\n      }\n    };\n  }, [factorCtx, name]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStrategyContext.Provider, { value: { strategy: name }, children }) : null;\n}\nfunction SignInVerifications(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const { activeTags: activeRoutes } = useActiveTags(routerRef, [\"step:first-factor\", \"step:second-factor\"]);\n  if (activeRoutes.has(\"step:first-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props });\n  }\n  if (activeRoutes.has(\"step:second-factor\")) {\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props });\n  }\n  return null;\n}\nfunction SignInFirstFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:first-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorInner, { ...props }) : null;\n}\nfunction SignInSecondFactor(props) {\n  const routerRef = SignInRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:second-factor\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorInner, { ...props }) : null;\n}\nfunction SignInFirstFactorInner(props) {\n  const ref = useSignInFirstFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInFirstFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\nfunction SignInSecondFactorInner(props) {\n  const ref = useSignInSecondFactorStep();\n  if (!ref) {\n    return null;\n  }\n  return ref ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInSecondFactorCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    SignInStrategiesProvider,\n    {\n      actorRef: ref,\n      ...props\n    }\n  ) }) : null;\n}\n\n// src/react/sign-in/step.tsx\n\nvar SIGN_IN_STEPS = {\n  start: \"start\",\n  verifications: \"verifications\",\n  \"choose-strategy\": \"choose-strategy\",\n  \"choose-session\": \"choose-session\",\n  \"forgot-password\": \"forgot-password\",\n  \"reset-password\": \"reset-password\"\n};\nfunction SignInStep(props) {\n  var _a3;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a3 = clerk.telemetry) == null ? void 0 : _a3.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_SignInStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_IN_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInStart, { ...props });\n    case SIGN_IN_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInVerifications, { ...props });\n    case SIGN_IN_STEPS[\"choose-strategy\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseStrategy, { ...props });\n    case SIGN_IN_STEPS[\"forgot-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInForgotPassword, { ...props });\n    case SIGN_IN_STEPS[\"reset-password\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInResetPassword, { ...props });\n    case SIGN_IN_STEPS[\"choose-session\"]:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignInChooseSession, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(`Invalid step name. Use: ${Object.keys(SIGN_IN_STEPS).join(\",\")}.`);\n  }\n}\n\n// src/react/sign-up/step.tsx\n\n\n\n// src/react/sign-up/continue.tsx\n\nvar SignUpContinueCtx = createContextFromActorRef(\"SignUpContinueCtx\");\nfunction SignUpContinue(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:continue\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueInner, { ...props }) : null;\n}\nfunction SignUpContinueInner(props) {\n  const ref = useSignUpContinueStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinueCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/start.tsx\n\nvar SignUpStartCtx = createContextFromActorRef(\"SignUpStartCtx\");\nfunction SignUpStart(props) {\n  const routerRef = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(routerRef, \"step:start\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartInner, { ...props }) : null;\n}\nfunction SignUpStartInner(props) {\n  const ref = useSignUpStartStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStartCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\n\n// src/react/sign-up/verifications.tsx\n\nvar SignUpVerificationCtx = createContextFromActorRef(\"SignUpVerificationCtx\");\nfunction SignUpVerifications(props) {\n  const ref = SignUpRouterCtx.useActorRef();\n  const activeState = useActiveTags(ref, \"step:verification\");\n  return activeState ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifyInner, { ...props }) : null;\n}\nfunction SignUpVerifyInner(props) {\n  const ref = useSignUpVerificationStep();\n  if (!ref) {\n    return null;\n  }\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerificationCtx.Provider, { actorRef: ref, children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n    Form,\n    {\n      flowActor: ref,\n      ...props\n    }\n  ) });\n}\nfunction SignUpStrategy({ children, name: tag }) {\n  const ref = SignUpVerificationCtx.useActorRef(true);\n  if (!ref) {\n    throw new Error(\n      '<Strategy> used outside of <SignUp>. Did you mean to `import { Strategy } from \"@clerk/elements/sign-in\"` instead?'\n    );\n  }\n  const { active } = useActiveTags(ref, [\n    `verification:${tag}`,\n    `verification:category:${tag}`\n  ]);\n  return active ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, { children }) : null;\n}\n\n// src/react/sign-up/step.tsx\n\nvar SIGN_UP_STEPS = {\n  start: \"start\",\n  continue: \"continue\",\n  verifications: \"verifications\"\n};\nfunction SignUpStep(props) {\n  var _a3;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a3 = clerk.telemetry) == null ? void 0 : _a3.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_SignUpStep\", { name: props.name }));\n  switch (props.name) {\n    case SIGN_UP_STEPS.start:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpStart, { ...props });\n    case SIGN_UP_STEPS.continue:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpContinue, { ...props });\n    case SIGN_UP_STEPS.verifications:\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(SignUpVerifications, { ...props });\n    default:\n      throw new ClerkElementsRuntimeError(`Invalid step name. Use 'start', 'continue', or 'verifications'.`);\n  }\n}\n\n// src/react/utils/map-scope-to-strategy.ts\nfunction isProviderStrategyScope(value) {\n  return value.startsWith(\"provider:\");\n}\nfunction mapScopeToStrategy(scope) {\n  if (scope === \"provider:metamask\") {\n    return \"web3_metamask_signature\";\n  }\n  if (scope === \"provider:coinbase\") {\n    return \"web3_coinbase_signature\";\n  }\n  if (scope === \"provider:saml\") {\n    return \"saml\";\n  }\n  const scopeWithoutPrefix = scope.replace(\"provider:\", \"\");\n  return `oauth_${scopeWithoutPrefix}`;\n}\n\n// src/react/common/loading.tsx\n\nfunction isSignInScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_IN_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction isSignUpScope(scope) {\n  if (!scope) {\n    return true;\n  }\n  if (scope.startsWith(\"step:\")) {\n    return Object.prototype.hasOwnProperty.call(SIGN_UP_STEPS, scope.replace(\"step:\", \"\"));\n  }\n  return true;\n}\nfunction Loading({ children, scope }) {\n  var _a3;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_7__.useClerk)();\n  (_a3 = clerk.telemetry) == null ? void 0 : _a3.record((0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_13__.eventComponentMounted)(\"Elements_Loading\", { scope: scope != null ? scope : false }));\n  const signInRouterRef = SignInRouterCtx.useActorRef(true);\n  const signUpRouterRef = SignUpRouterCtx.useActorRef(true);\n  if (!signInRouterRef && !signUpRouterRef) {\n    throw new ClerkElementsRuntimeError(`<Loading> must be used within a <SignIn> or <SignUp> component.`);\n  }\n  if (signInRouterRef) {\n    if (isSignInScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignInLoading,\n        {\n          scope,\n          routerRef: signInRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignIn>.`);\n    }\n  }\n  if (signUpRouterRef) {\n    if (isSignUpScope(scope)) {\n      return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_9__.jsx)(\n        SignUpLoading,\n        {\n          scope,\n          routerRef: signUpRouterRef,\n          children\n        }\n      );\n    } else {\n      throw new ClerkElementsRuntimeError(`Invalid scope \"${scope}\" used for <Loading> inside <SignUp>.`);\n    }\n  }\n  throw new ClerkElementsRuntimeError(\"Invalid state for <Loading>. Please open an issue.\");\n}\nfunction SignInLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"verifications\") || isInferredStepLoading(\"choose-strategy\") || isInferredStepLoading(\"forgot-password\") || isInferredStepLoading(\"reset-password\");\n  }\n  return children(loadingResult);\n}\nfunction SignUpLoading({ children, scope, routerRef }) {\n  const [isLoading, { step: loadingStep, strategy, action }] = useLoading(routerRef);\n  const tags = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_6__.useSelector)(routerRef, (s) => s.tags);\n  const isStepLoading = (step) => isLoading && loadingStep === step;\n  const isInferredStepLoading = (step) => tags.has(`step:${step}`) && isStepLoading(step);\n  let loadingResult = false;\n  if (scope === \"global\") {\n    loadingResult = isLoading;\n  } else if (scope && isProviderStrategyScope(scope)) {\n    loadingResult = isLoading && loadingStep === void 0 && strategy === mapScopeToStrategy(scope);\n  } else if (scope) {\n    loadingResult = isStepLoading(scope.replace(\"step:\", \"\")) || scope === action;\n  } else {\n    loadingResult = isInferredStepLoading(\"start\") || isInferredStepLoading(\"continue\") || isInferredStepLoading(\"verifications\");\n  }\n  return children(loadingResult);\n}\n\n\n//# sourceMappingURL=chunk-BXZUXUGF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-BXZUXUGF.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/react/sign-in/index.mjs":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/react/sign-in/index.mjs ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ SignInAction),\n/* harmony export */   FirstFactor: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInFirstFactor),\n/* harmony export */   Passkey: () => (/* binding */ SignInPasskey),\n/* harmony export */   Root: () => (/* binding */ SignInRoot),\n/* harmony export */   SafeIdentifier: () => (/* binding */ SignInSafeIdentifier),\n/* harmony export */   Salutation: () => (/* binding */ SignInSalutation),\n/* harmony export */   SecondFactor: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSecondFactor),\n/* harmony export */   SessionList: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSessionList),\n/* harmony export */   SessionListItem: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSessionListItem),\n/* harmony export */   SignIn: () => (/* binding */ SignInRoot),\n/* harmony export */   Step: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInStep),\n/* harmony export */   Strategy: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInStrategy),\n/* harmony export */   SupportedStrategy: () => (/* reexport safe */ _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSupportedStrategy)\n/* harmony export */ });\n/* harmony import */ var _chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../chunk-7WFXAEQQ.mjs */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/router.mjs\");\n/* harmony import */ var _chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../chunk-7WFXAEQQ.mjs */ \"(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-7WFXAEQQ.mjs\");\n/* harmony import */ var _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../chunk-BXZUXUGF.mjs */ \"(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/chunk-BXZUXUGF.mjs\");\n/* harmony import */ var client_only__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! client-only */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/client-only/index.js\");\n/* harmony import */ var _clerk_clerk_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @clerk/clerk-react */ \"(ssr)/./node_modules/.pnpm/@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/clerk-react/dist/index.mjs\");\n/* harmony import */ var _clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @clerk/shared/telemetry */ \"(ssr)/./node_modules/.pnpm/@clerk+shared@2.9.2_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@clerk/shared/dist/telemetry.mjs\");\n/* harmony import */ var _xstate_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @xstate/react */ \"(ssr)/./node_modules/.pnpm/@xstate+react@4.1.3_@types+react@18.3.18_react@18.3.1_xstate@5.19.2/node_modules/@xstate/react/dist/xstate-react.development.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@5.19.2/node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/.pnpm/next@14.2.5_@babel+core@7.24.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(ssr)/./node_modules/.pnpm/@radix-ui+react-slot@1.1.2_@types+react@18.3.18_react@18.3.1/node_modules/@radix-ui/react-slot/dist/index.mjs\");\n\n\n\n// src/react/sign-in/index.ts\n\n\n// src/react/sign-in/root.tsx\n\n\n\n\n\n\nvar actor = (0,xstate__WEBPACK_IMPORTED_MODULE_5__.A)(_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterMachine, { inspect: _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.inspect });\nactor.start();\nfunction SignInFlowProvider({ children, exampleMode, fallback, isRootPath }) {\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const router = (0,_chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_7__.useClerkRouter)();\n  const formRef = (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.useFormStore)();\n  const isReady = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_8__.useSelector)(actor, (state) => state.value !== \"Idle\");\n  (0,react__WEBPACK_IMPORTED_MODULE_3__.useEffect)(() => {\n    if (!clerk || !router) {\n      return;\n    }\n    clerk.addOnLoaded(() => {\n      const evt = {\n        type: \"INIT\",\n        clerk,\n        exampleMode,\n        formRef,\n        router,\n        signUpPath: _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SIGN_UP_DEFAULT_BASE_PATH\n      };\n      if (actor.getSnapshot().can(evt)) {\n        actor.send(evt);\n      }\n    });\n    if (formRef && actor.getSnapshot().can({ type: \"RESET.STEP\" })) {\n      actor.send({\n        type: \"FORM.ATTACH\",\n        formRef\n      });\n    }\n  }, [clerk, exampleMode, formRef == null ? void 0 : formRef.id, !!router, clerk.loaded]);\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.Provider, { actorRef: actor, children: [\n    isRootPath && !isReady && fallback ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.Form, { children: fallback }) : null,\n    clerk.loaded && isReady ? children : null\n  ] });\n}\nfunction SignInRoot({\n  children,\n  exampleMode = false,\n  fallback = null,\n  path: pathProp,\n  routing = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.ROUTING.path\n}) {\n  var _a;\n  const clerk = (0,_clerk_clerk_react__WEBPACK_IMPORTED_MODULE_1__.useClerk)();\n  const inferredPath = (0,_chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_9__.usePathnameWithoutCatchAll)();\n  const path = pathProp || inferredPath || _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SIGN_IN_DEFAULT_BASE_PATH;\n  (_a = clerk.telemetry) == null ? void 0 : _a.record(\n    (0,_clerk_shared_telemetry__WEBPACK_IMPORTED_MODULE_2__.eventComponentMounted)(\"Elements_SignInRoot\", {\n      exampleMode,\n      fallback: Boolean(fallback),\n      path,\n      routing\n    })\n  );\n  const router = (routing === _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.ROUTING.virtual ? _chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_9__.useVirtualRouter : _chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_9__.useNextRouter)();\n  const isRootPath = path === router.pathname();\n  return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n    _chunk_7WFXAEQQ_mjs__WEBPACK_IMPORTED_MODULE_7__.Router,\n    {\n      basePath: path,\n      router,\n      children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.FormStoreProvider, { children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n        SignInFlowProvider,\n        {\n          exampleMode,\n          fallback,\n          isRootPath,\n          children\n        }\n      ) })\n    }\n  );\n}\n\n// src/react/sign-in/action/action.tsx\n\n\n// src/react/sign-in/action/navigate.tsx\n\n\n\nvar SIGN_IN_NAVIGATE_NAME = \"SignInNavigate\";\nvar SignInNavigationEventMap = {\n  start: \"NAVIGATE.START\",\n  previous: \"NAVIGATE.PREVIOUS\",\n  \"choose-strategy\": \"NAVIGATE.CHOOSE_STRATEGY\",\n  \"forgot-password\": \"NAVIGATE.FORGOT_PASSWORD\"\n};\nvar SignInNavigate = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, to, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.useActorRef();\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(() => {\n      const type = SignInNavigationEventMap[to];\n      if (actorRef.getSnapshot().can({ type })) {\n        actorRef.send({ type });\n      } else {\n        console.warn(\n          `Clerk: <SignIn.Action navigate=\"${to}\"> is an invalid navigation event. You can only navigate to: ${Object.keys(SignInNavigationEventMap).join(\", \")}.`\n        );\n      }\n    }, [actorRef, to]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInNavigate.displayName = SIGN_IN_NAVIGATE_NAME;\n\n// src/react/sign-in/action/resend.tsx\n\n\n\n\nvar SIGN_IN_RESEND_NAME = \"SignInResend\";\nvar SignInResend = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, fallback, ...rest }, forwardedRef) => {\n    const firstFactorRef = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInFirstFactorCtx.useActorRef(true);\n    const secondFactorRef = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSecondFactorCtx.useActorRef(true);\n    const actorRef = firstFactorRef || secondFactorRef;\n    if (!actorRef) {\n      throw new Error('The resend action must be used within <SignIn.Step name=\"verifications\">.');\n    }\n    const fallbackProps = (0,_xstate_react__WEBPACK_IMPORTED_MODULE_8__.useSelector)(\n      actorRef,\n      (state) => ({\n        resendable: state.context.resendable,\n        resendableAfter: state.context.resendableAfter\n      }),\n      (a, b) => a.resendableAfter === b.resendableAfter && a.resendable === b.resendable\n    );\n    if (fallback && !fallbackProps.resendable) {\n      return typeof fallback === \"function\" ? fallback(fallbackProps) : fallback;\n    }\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        disabled: !fallbackProps.resendable,\n        onClick: () => actorRef.send({ type: \"RETRY\" }),\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInResend.displayName = SIGN_IN_RESEND_NAME;\n\n// src/react/sign-in/action/set-active-session.tsx\n\n\n\nvar DISPLAY_NAME = \"SignInSetActiveSession\";\nvar SignInSetActiveSession = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.useActorRef();\n    const session = (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.useSignInActiveSessionContext)();\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(() => {\n      const event = { type: \"SESSION.SET_ACTIVE\", id: session.id };\n      if (actorRef.getSnapshot().can(event)) {\n        actorRef.send(event);\n      } else {\n        console.warn(\n          `Clerk: <SignIn.Action setActiveSession> is an invalid event. You can only choose an active session from <SignIn.Step name=\"choose-session\">.`\n        );\n      }\n    }, [actorRef, session.id]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInSetActiveSession.displayName = DISPLAY_NAME;\n\n// src/react/sign-in/action/action.tsx\n\nvar DISPLAY_NAME2 = \"SignInAction\";\nvar SignInAction = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef((props, forwardedRef) => {\n  const { submit, navigate, resend, setActiveSession, ...rest } = props;\n  let Comp;\n  if (submit) {\n    Comp = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.Submit;\n  } else if (navigate) {\n    Comp = SignInNavigate;\n  } else if (resend) {\n    Comp = SignInResend;\n  } else if (setActiveSession) {\n    Comp = SignInSetActiveSession;\n  }\n  return Comp ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n    Comp,\n    {\n      to: navigate,\n      ...rest,\n      ref: forwardedRef\n    }\n  ) : null;\n});\nSignInAction.displayName = DISPLAY_NAME2;\n\n// src/react/sign-in/passkey.tsx\n\n\n\nvar SIGN_IN_PASSKEY_NAME = \"SignInPasskey\";\nvar SignInPasskey = react__WEBPACK_IMPORTED_MODULE_3__.forwardRef(\n  ({ asChild, ...rest }, forwardedRef) => {\n    const actorRef = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.useActorRef(true);\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_10__.Slot : \"button\";\n    const defaultProps = asChild ? {} : { type: \"button\" };\n    const sendEvent = react__WEBPACK_IMPORTED_MODULE_3__.useCallback(() => {\n      actorRef == null ? void 0 : actorRef.send({ type: \"AUTHENTICATE.PASSKEY\" });\n    }, [actorRef]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(\n      Comp,\n      {\n        ...defaultProps,\n        ...rest,\n        onClick: sendEvent,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSignInPasskey.displayName = SIGN_IN_PASSKEY_NAME;\n\n// src/react/sign-in/identifiers.tsx\n\nfunction SignInSafeIdentifier({ transform }) {\n  const strategy = (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.useSignInStrategy)();\n  const selector = (0,react__WEBPACK_IMPORTED_MODULE_3__.useMemo)(() => (0,_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSafeIdentifierSelectorForStrategy)(strategy), [strategy]);\n  const safeIdentifier = _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.useSelector(selector);\n  if (transform) {\n    return transform(safeIdentifier);\n  }\n  return safeIdentifier;\n}\nfunction SignInSalutation() {\n  return _chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInRouterCtx.useSelector(_chunk_BXZUXUGF_mjs__WEBPACK_IMPORTED_MODULE_6__.SignInSalutationSelector);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@clerk+elements@0.14.6_@clerk+clerk-react@5.12.0_react-dom@18.3.1_react@18.3.1__react@1_9ca6e5e5b929a46518fc971d7baa81f7/node_modules/@clerk/elements/dist/react/sign-in/index.mjs\n");

/***/ })

};
;